{"version":3,"file":"component---src-pages-projects-js-abb4c0b46255305b7237.js","mappings":"mJAOA,MAAMA,EAAcA,IAClBC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,GAAO,CACNC,MAAO,EACPC,UAAU,SACVC,YAAU,EACVC,KAAK,QACLC,OAAO,QACPC,MAAM,SACP,aAMCC,EAAS,CAAC,SAAU,UAAW,SAyCrC,UAxCiBC,IAAe,IAAd,KAAEC,GAAMD,EACxB,MAAME,EAAQD,EAAKE,SAASC,MAC5B,OACEb,EAAAA,cAACc,EAAAA,EAAI,CACHC,KAAM,CACJC,MAAO,CAAEC,WAAY,cAAeC,OAAQ,SAC5CC,QAASpB,GAEXqB,IAAK,CACHC,MAAO,WACPC,YAAY,oBAGdtB,EAAAA,cAACuB,EAAAA,GAAe,CAACC,MAAO,CAAEC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,IACnDhB,EAAMiB,KAAI,CAACC,EAAMC,KAChB,MAAM,MAAET,EAAK,KAAEU,GAASF,EAAKG,KAAKC,aAC5B,KAAEC,GAASL,EAAKG,KAAKG,OACrBC,EAAeL,GAAW,IAAOG,EACjCG,EACJR,EAAKG,KAAKC,YAAYX,aAAeO,EAAKG,KAAKK,QAC3CpB,EAAaT,EAAOsB,EAAQ,GAClC,OACE9B,EAAAA,cAACsC,EAAAA,GAAM,CACLC,IAAKlB,EACLA,MAAOA,EACPa,KAAME,EACNC,QAASA,EACTpB,WAAYA,GACZ,KAIH,C,yFC/CJ,MAAMH,EAAQE,IACnB,MAAM,SAAEwB,EAAQ,KAAEzB,EAAI,IAAEK,EAAG,SAAEqB,GAAazB,GAClCA,MAAO0B,EAAS,QAAEvB,GAAY,IAAKJ,GAC3C,OACEf,EAAAA,cAAC2C,EAAAA,GAAM,CAACF,SAAUA,GACfrB,GAAOpB,EAAAA,cAAC4C,EAAAA,GAAGC,OAAAC,OAAA,GAAK1B,EAAG,CAAEqB,SAAUA,EAAUM,OAAO,KAChDhC,GACCf,EAAAA,cAACgD,EAAAA,GAAIH,OAAAC,OAAA,CAACG,MAAM,SAASC,QAAQ,WAAcR,GACxC1C,EAAAA,cAAoBmB,IAGzBnB,EAAAA,cAACmD,EAAAA,EAAG,CAACC,MAAM,SAAS9C,OAAQ,CAAE+C,WAAY,QAAUC,IAAI,UACrDd,GAEI,C","sources":["webpack://varya.me/./src/pages/projects.js","webpack://varya.me/./src/templates/Page.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { graphql } from \"gatsby\";\nimport { Heading, Widget, WidgetContainer } from \"@components\";\nimport { Page } from \"@templates/Page\";\n\nconst HeroContent = () => (\n  <>\n    <Heading\n      level={1}\n      alignSelf=\"center\"\n      responsive\n      size=\"large\"\n      margin=\"small\"\n      color=\"brand\"\n    >\n      Projects\n    </Heading>\n  </>\n);\n\nconst colors = [\"accent\", \"neutral\", \"brand\"];\nconst Projects = ({ data }) => {\n  const posts = data.projects.edges;\n  return (\n    <Page\n      hero={{\n        props: { background: \"transparent\", height: \"small\" },\n        content: HeroContent,\n      }}\n      seo={{\n        title: \"Projects\",\n        description: `My recent works`,\n      }}\n    >\n      <WidgetContainer items={{ small: 1, medium: 2, large: 2 }}>\n        {posts.map((post, index) => {\n          const { title, link } = post.node.frontmatter;\n          const { slug } = post.node.fields;\n          const resolvedSlug = link ? link : `/${slug}`;\n          const excerpt =\n            post.node.frontmatter.description || post.node.excerpt;\n          const background = colors[index % 3];\n          return (\n            <Widget\n              key={title}\n              title={title}\n              slug={resolvedSlug}\n              excerpt={excerpt}\n              background={background}\n            />\n          );\n        })}\n      </WidgetContainer>\n    </Page>\n  );\n};\n\nProjects.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default Projects;\n\nexport const projectsQuery = graphql`\n  query ProjectsIndexQuery {\n    projects: allMdx(\n      filter: { internal: { contentFilePath: { regex: \"//projects//\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          body\n          excerpt(pruneLength: 600)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM YYYY\")\n            description\n            link\n            meta {\n              desc\n            }\n            cover {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Box } from \"grommet\";\nimport { Hero } from \"@components\";\nimport { Layout } from \"@components\";\nimport { Seo } from \"@components\";\n\nexport const Page = (props) => {\n  const { children, hero, seo, location } = props;\n  const { props: heroProps, content } = { ...hero };\n  return (\n    <Layout location={location}>\n      {seo && <Seo {...seo} location={location} defer={false} />}\n      {hero && (\n        <Hero align=\"center\" justify=\"between\" {...heroProps}>\n          {React.createElement(content)}\n        </Hero>\n      )}\n      <Box width=\"xlarge\" margin={{ horizontal: \"auto\" }} pad=\"medium\">\n        {children}\n      </Box>\n    </Layout>\n  );\n};\n\nPage.propTypes = {\n  hero: PropTypes.shape({\n    props: PropTypes.object,\n    content: PropTypes.node,\n  }),\n  seo: PropTypes.shape({\n    title: PropTypes.string,\n    keywords: PropTypes.array,\n  }),\n  children: PropTypes.node,\n  location: PropTypes.object,\n};\n"],"names":["HeroContent","React","Heading","level","alignSelf","responsive","size","margin","color","colors","_ref","data","posts","projects","edges","Page","hero","props","background","height","content","seo","title","description","WidgetContainer","items","small","medium","large","map","post","index","link","node","frontmatter","slug","fields","resolvedSlug","excerpt","Widget","key","children","location","heroProps","Layout","Seo","Object","assign","defer","Hero","align","justify","Box","width","horizontal","pad"],"sourceRoot":""}