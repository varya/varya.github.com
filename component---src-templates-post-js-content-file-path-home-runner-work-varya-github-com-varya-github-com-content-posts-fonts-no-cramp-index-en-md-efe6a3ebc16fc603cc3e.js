"use strict";(self.webpackChunkvarya_me=self.webpackChunkvarya_me||[]).push([[5739],{7096:function(n,a,s){s.r(a),s.d(a,{default:function(){return y}});var t=s(1151),e=s(7294);function p(n){const a=Object.assign({p:"p",span:"span",a:"a"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.p,null,"A developer using custom fonts in web (don't say this is evil) usually face a\ndilemma."),"\n",e.createElement(a.p,null,"The users' main interest is the content of the page not the\nview. It is nice to provide it as fast as possible and then apply a custom font.\nThis blog used to work this way. I provided a script among others in the bundle\nlinked by the end of the page."),"\n",e.createElement("excerpt"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">function</span> <span class="token function">addFont</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> h<span class="token punctuation">,</span> l</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    h <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    l <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"link"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    l<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span>\n    l<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">"stylesheet"</span><span class="token punctuation">;</span>\n    h<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token function">addFont</span><span class="token punctuation">(</span>\n    <span class="token string">"//fonts.googleapis.com/css?"</span> <span class="token operator">+</span>\n      <span class="token string">"family=Noto+Serif&amp;subset=latin,cyrillic-ext,cyrillic"</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"The drawback is obvious. Once a font is loaded and apllied, a user notice\ntwitching as a page is being re-rendering. It is recommended to define a\nsuitable system font in the ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">font-face</code>'}}),". But there never is a good fit.\nOtherwise there was no need in a custom font."),"\n",e.createElement(a.p,null,"The only way to avoid the font rendering jerk is to provide the font in advance.\nWith inlining a base64 of a font into CSS and linking it in ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;head></code>'}})," no\ntwitching is guaranteed as well as increasing page loading time."),"\n",e.createElement(a.p,null,"For a while I was deciding between the two variants until my colleague ",e.createElement(a.a,{href:"http://kizu.ru/en/"},"Roman\nKomarov aka kizu")," suggested an elegant solution which is in\nuse right now."),"\n",e.createElement(a.p,null,"At the first time a user opens any page of this site, a CSS with the font is\nloaded and stored as a piece of text in the ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">localStorage</code>'}}),"."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> Storage <span class="token operator">===</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"varya.me.fonts"</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"../../data/fonts.css"</span><span class="token punctuation">,</span>\n      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">"varya.me.fonts"</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"But I do not apply this CSS after loading. So, not jerks. As request is only to\nfill up the storage, it goes after the ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">domReady</code>'}}),"."),"\n",e.createElement(a.p,null,"By the time of requesting the next page the custom font is already in the user's\ncomputer. Checking that it is available I apply it to the page. The faster the\nbetter, and as the action costs almost nothing an inline ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;head></code>'}})," script goes\nhere."),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">d<span class="token punctuation">,</span> s<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> s <span class="token operator">!==</span> <span class="token string">"undefined"</span> <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"varya.me.fonts"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"&lt;style>"</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">"varya.me.fonts"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"&lt;/style>"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> Storage<span class="token punctuation">,</span> localStorage<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"With that the blog looks as it should do with 2+ pages loaded. I consider this\nprice for no-twitching custom font as reasonable."),"\n",e.createElement(a.p,null,"Any ideas of making it even better?"))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)},c=s(5697),l=s.n(c),u=s(211),i=s(7034),r=s(9947),k=s(2187),d=s(3103);const g={Box:u.x,Button:i.z,Text:r.x,Heading:k.X6,Paragraph:k.nv,PatternJourney:k.Bk,PureHtml:k.hT,Section:k.$0,Hero:k.VM,Widget:k.$L,PatternJourney:k.Bk,WidgetContainer:k.Hl,Workshop:k.pC,ProjectRoles:k.MB,DsAspects:k.ED,Link:k.rU,Image:k.Ee,ImageBlock:k.r8},m=n=>a=>{let{children:s}=a;return e.createElement(k.X6,{level:n},s)},h={h1:m(1),h2:m(2),h3:m(3),h4:m(4),h5:m(5),h6:m(6),p:n=>{let{children:a}=n;return e.createElement(k.nv,{standout:!0},a)},a:k.rU,div:n=>{let{"data-excerpt":a,children:s,...t}=n;return a?e.createElement(k.nv,{as:"div",lead:!0},s):e.createElement("div",t,s)}};h.h1.propTypes={children:l().node};const f=n=>{let{data:{mdx:a,site:{siteMetadata:{siteUrl:s}}},children:p,pageContext:{next:o,prev:c,fileSourceUrl:l}}=n;const{readingTime:i,slug:r,disqusIdentifier:m}=a.fields,{date:f,title:y,subTitle:v,cover:E,tumblr:w}=a.frontmatter,b=a.frontmatter.tags&&a.frontmatter.tags.split(","),x=r.startsWith("blog/");return a?e.createElement(k.Ar,null,e.createElement(k.mV,{imageUrl:E&&E.childImageSharp.gatsbyImageData.images.fallback.src,tags:b,date:f,readingTime:x&&parseInt(i.minutes)>0?Math.round(i.minutes).toFixed(1)+" min read":null,title:y,subTitle:v}),e.createElement(k.pQ,{data:a}),e.createElement(u.x,{flex:"grow",width:"xlarge",margin:{horizontal:"auto"},pad:"medium",direction:"column"},e.createElement(t.Zo,{components:{...h,...g}},p),e.createElement(u.x,{direction:"row",fill:"horizontal",justify:"center",margin:{bottom:"auto"},pad:{vertical:"medium"}},b&&b.length>0&&b.map((n=>e.createElement(k.Vp,{key:n,name:n.trim(),slug:(0,d.mA)(n),margin:"xsmall"})))),x&&e.createElement(e.Fragment,null,e.createElement(k.Yp,{flex:!1,prevSlug:c&&"/"+c.fields.slug,nextSlug:o&&"/"+o.fields.slug,prevTitle:c&&c.frontmatter.title,nextTitle:o&&o.frontmatter.title,pad:{vertical:"medium"}}),e.createElement(k.vc,{link:l}),e.createElement(k.HW,{slug:r,title:y,disqusIdentifier:m,tumblr:w,siteUrl:s})))):null};function y(n){return e.createElement(f,n,e.createElement(o,n))}},1151:function(n,a,s){s.d(a,{Zo:function(){return c},ah:function(){return p}});var t=s(7294);const e=t.createContext({});function p(n){const a=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}const o={};function c({components:n,children:a,disableParentContext:s}){let c;return c=s?"function"==typeof n?n({}):n||o:p(n),t.createElement(e.Provider,{value:c},a)}}}]);
//# sourceMappingURL=component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-fonts-no-cramp-index-en-md-efe6a3ebc16fc603cc3e.js.map