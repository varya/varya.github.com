{"version":3,"file":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-javascript-in-bemjson-index-en-md-f632f928143dbdf0f34f.js","mappings":"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","sources":["webpack://varya.me/./content/posts/javascript-in-bemjson/index_en.md","webpack://varya.me/./src/templates/Post.js","webpack://varya.me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"We usually start developing a web site prototyping the interface and then\\nimplementing HTML/CSS and bacis JavaScript. In case\\nof using the full BEM stack a tranformation from prototype to a functioning web\\nsite goes smoothly. You can clone the project from\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/bem/project-stub\"\n  }, \"project-stub\"), \" and create a static web page\\nas it was \", React.createElement(_components.a, {\n    href: \"http://bem.info/articles/start-with-project-stub/\"\n  }, \"described\\nearlier\"), \".\"), \"\\n\", React.createElement(\"excerpt\"), \"\\n\", React.createElement(_components.p, null, \"Thanks to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BEMHTML</code>\"\n    }\n  }), \" templates, you do not need write all the HTML manually.\\nDescribing page sructure in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BEMJSON</code>\"\n    }\n  }), \" rather than writing all the tags manually\\nsaves time. But sometimes this is still a lot of work to do, especially for large\\npages.\"), \"\\n\", React.createElement(_components.p, null, \"Luckily BEMJSON can include JavaScript pieces to produce some blocks dymamically.\\nI created an example of such usage:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'page'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token operator\\\">...</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'content'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">var</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">for</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">var</span> i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span> i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">;</span> i<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                    res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'button'</span><span class=\\\"token punctuation\\\">,</span>\\n                        <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Button '</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n                    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/varya/dynamic-bemjson/blob/master/desktop.bundles/page1/page1.bemjson.js\"\n  }, \"full\\ncode\")), \"\\n\", React.createElement(_components.p, null, \"This JavaScript creates 10 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">button</code>\"\n    }\n  }), \" blocks when the page is being built with\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bem-tools</code>\"\n    }\n  }), \".\\nCheck the \", React.createElement(_components.a, {\n    href: \"http://varya.me/dynamic-bemjson/desktop.bundles/page1/page1.html\"\n  }, \"result\\npage\"), \"\\nto see them.\"), \"\\n\", React.createElement(_components.p, null, \"Another example is a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">menu</code>\"\n    }\n  }), \" block. Such interface pieces usually consist of a\\nlot of items with minor differences which cases a lot of copy-paste on a page.\\nWith JavaScript in BEMJSON this can be easily reduced.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'page'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span><span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token operator\\\">...</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'menu'</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token literal-property property\\\">title</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Index'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">isSelected</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token literal-property property\\\">title</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Products'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">isSelected</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token literal-property property\\\">title</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'Contact'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">isSelected</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n            <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">item</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n                <span class=\\\"token keyword\\\">var</span> block <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n                    <span class=\\\"token literal-property property\\\">block</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'menu'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">elem</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'item'</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">content</span><span class=\\\"token operator\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token literal-property property\\\">mods</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                        <span class=\\\"token literal-property property\\\">selected</span><span class=\\\"token operator\\\">:</span> item<span class=\\\"token punctuation\\\">.</span>isSelected\\n                    <span class=\\\"token punctuation\\\">}</span>\\n                <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token keyword\\\">return</span> block<span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">...</span>\\n    <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/varya/dynamic-bemjson/blob/master/desktop.bundles/page2/page2.bemjson.js\"\n  }, \"full\\ncode\")), \"\\n\", React.createElement(_components.p, null, \"This gives a \", React.createElement(_components.a, {\n    href: \"http://varya.me/dynamic-bemjson/desktop.bundles/page2/page2.html\"\n  }, \"page with a menu of 3 items\"), \".\\nThe bigger is the array of items, the more you save. Especially when the structure\\nof every item changes while developing.\"), \"\\n\", React.createElement(_components.p, null, \"Indeed, this feature is not needed when BEMJSON is a result of 1st layer templates\\n(like BEMTREE, priv.js) you can produce as much BEMJSON as is necessary. But with\\ninitial development of a static web page, the JavaScript tricks help to avoid\\ncopy-paste.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/varya.github.com/varya.github.com/content/posts/javascript-in-bemjson/index_en.md\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Box, Button, Text} from \"grommet\";\nimport {Comments, DsAspects, GithubEdit, Heading, Hero, Image, ImageBlock, Layout, Link, Paragraph, PatternJourney, PostHeader, PrevNextNav, ProjectRoles, Workshop, PureHtml, Section, Seo, Tag, Widget, WidgetContainer} from \"@components\";\nimport {toKebabCase} from \"../common/utils\";\nconst globalMdxComponents = {\n  Box,\n  Button,\n  Text,\n  Heading,\n  Paragraph,\n  PatternJourney,\n  PureHtml,\n  Section,\n  Hero,\n  Widget,\n  PatternJourney,\n  WidgetContainer,\n  Workshop,\n  ProjectRoles,\n  DsAspects,\n  Link,\n  Image,\n  ImageBlock\n};\nconst _Heading = level => {\n  const component = ({children}) => React.createElement(Heading, {\n    level: level\n  }, children);\n  component.propTypes = {\n    children: PropTypes.node\n  };\n  return component;\n};\nconst _Paragraph = () => {\n  const component = ({children}) => React.createElement(Paragraph, {\n    standout: true\n  }, children);\n  component.propTypes = {\n    children: PropTypes.node\n  };\n  return component;\n};\nconst _div = ({\"data-excerpt\": dataExcerpt, children, ...props}) => dataExcerpt ? React.createElement(Paragraph, {\n  as: \"div\",\n  lead: true\n}, children) : React.createElement(\"div\", props, children);\n_div.propTypes = {\n  \"data-excerpt\": PropTypes.string,\n  children: PropTypes.node\n};\nconst postComponents = {\n  h1: _Heading(1),\n  h2: _Heading(2),\n  h3: _Heading(3),\n  h4: _Heading(4),\n  h5: _Heading(5),\n  h6: _Heading(6),\n  p: _Paragraph(),\n  a: Link,\n  div: _div\n};\npostComponents.h1.propTypes = {\n  children: PropTypes.node\n};\nconst Post = ({data: {mdx, site: {siteMetadata: {siteUrl}}}, children, pageContext: {next, prev, fileSourceUrl}}) => {\n  const {readingTime, slug, disqusIdentifier} = mdx.fields;\n  const {date, title, subTitle, cover, tumblr} = mdx.frontmatter;\n  const tags = mdx.frontmatter.tags && mdx.frontmatter.tags.split(\",\");\n  const showBlogMeta = slug.startsWith(\"blog/\");\n  if (!mdx) {\n    return null;\n  }\n  return React.createElement(Layout, null, React.createElement(PostHeader, {\n    imageUrl: cover && cover.childImageSharp.gatsbyImageData.images.fallback.src,\n    tags: tags,\n    date: date,\n    readingTime: showBlogMeta && parseInt(readingTime.minutes) > 0 ? `${Math.round(readingTime.minutes).toFixed(1)} min read` : null,\n    title: title,\n    subTitle: subTitle\n  }), React.createElement(Seo, {\n    data: mdx\n  }), React.createElement(Box, {\n    flex: \"grow\",\n    width: \"xlarge\",\n    margin: {\n      horizontal: \"auto\"\n    },\n    pad: \"medium\",\n    direction: \"column\"\n  }, React.createElement(MDXProvider, {\n    components: {\n      ...postComponents,\n      ...globalMdxComponents\n    }\n  }, children), React.createElement(Box, {\n    direction: \"row\",\n    fill: \"horizontal\",\n    justify: \"center\",\n    margin: {\n      bottom: \"auto\"\n    },\n    pad: {\n      vertical: \"medium\"\n    }\n  }, tags && tags.length > 0 && tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag.trim(),\n    slug: toKebabCase(tag),\n    margin: \"xsmall\"\n  }))), showBlogMeta && React.createElement(React.Fragment, null, React.createElement(PrevNextNav, {\n    flex: false,\n    prevSlug: prev && `/${prev.fields.slug}`,\n    nextSlug: next && `/${next.fields.slug}`,\n    prevTitle: prev && prev.frontmatter.title,\n    nextTitle: next && next.frontmatter.title,\n    pad: {\n      vertical: \"medium\"\n    }\n  }), React.createElement(GithubEdit, {\n    link: fileSourceUrl\n  }), React.createElement(Comments, {\n    slug,\n    title,\n    disqusIdentifier,\n    tumblr,\n    siteUrl\n  }))));\n};\nPost.propTypes = {\n  imageUrl: PropTypes.string,\n  data: PropTypes.object,\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n    fileSourceUrl: PropTypes.string\n  })\n};\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        slug\n        disqusIdentifier\n        readingTime {\n          minutes\n        }\n      }\n      frontmatter {\n        title\n        subTitle\n        date(formatString: \"DD MMMM YYYY\")\n        v2\n        old\n        tumblr\n        tags\n        meta {\n          desc\n        }\n        canonical\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FIXED)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","globalMdxComponents","Box","Button","Text","Heading","Paragraph","PatternJourney","PureHtml","Section","Hero","Widget","WidgetContainer","Workshop","ProjectRoles","DsAspects","Link","Image","ImageBlock","_Heading","level","_ref","children","postComponents","h1","h2","h3","h4","h5","h6","_ref2","standout","div","_ref3","dataExcerpt","as","lead","propTypes","PropTypes","Post","_ref4","data","mdx","site","siteMetadata","siteUrl","pageContext","next","prev","fileSourceUrl","readingTime","slug","disqusIdentifier","fields","date","title","subTitle","cover","tumblr","frontmatter","tags","split","showBlogMeta","startsWith","Layout","PostHeader","imageUrl","childImageSharp","gatsbyImageData","images","fallback","src","parseInt","minutes","Math","round","toFixed","Seo","flex","width","margin","horizontal","pad","direction","MDXProvider","fill","justify","bottom","vertical","length","map","tag","Tag","key","name","trim","toKebabCase","PrevNextNav","prevSlug","nextSlug","prevTitle","nextTitle","GithubEdit","link","Comments","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}