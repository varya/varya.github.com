{"componentChunkName":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-proptypes-in-zeroheight-index-md","path":"/blog/proptypes-in-zeroheight/","result":{"data":{"mdx":{"id":"3087ebf6-a03a-5bf8-9399-dfe839daa079","body":"\n<div data-excerpt>\n\nOne of the main focuses in my recent work is to keep documentation for designers and developers\nin the same place. How exactly to achieve this, depends on what are the chosen documenting tools.\nAt the moment, our team is trying ZeroHeight which is very much appreciated by the designers. However,\nbrining there technical documentation like a PropTypes table for the components, I faced some obstacles.\nAnyways, there is a solution.\n\n</div>\n\n### Create a Storybook page with PropTypes table\n\nFor every component, create a separate page in Storybook where you output only the component properties. You can use `MDX` syntax for stories. So, `Components.stories.mdx` (or another name, depending on your Storybook configuration) should contain the following code.\n\n```javascript\nimport { Meta, Props } from \"@storybook/addon-docs/blocks\";\nimport Badge from \"./Badge.js\";\n\n<Meta title=\"Components/Badge/JsDocs\" component={Badge} />\n\n<Props of={Badge} />\n```\n\nThis renders you the page like in the screenshot below.\n\n<div class=\"small\" markdown=\"1\">\n\n![](./storybook.png)<br/>\nSource:\n[Elisa Design System. Badge component](https://component-library-storybook.dc2-dev.elisa.fi/?path=/docs/components-badge-jsdocs--page)\n\n</div>\n\n### Embed the PropTypes page into ZeroHeight\n\n1. On the component page in ZeroHeight, insert a new block of code.\n   ![](./zeroheight1.png)\n1. Select the \"Storybook\" option.\n   ![](./zeroheight2.png)\n1. Turn on \"Show add-ons\" and insert the URL of the PropTypes page from your Storybook.\n   ![](./zeroheight3.png)\n\nOnce the page is loaded, you get a result similar to this:\n\n![](./zeroheight4.png)\n\n## Result\n\nIn the view mode, you can see cleaner output without the URL of the page.\n\n![](./zeroheight-result.png)\n\nUnfortunately, there is no way to make PropTypes shown automatically for all the documented components. Even though,\nyou can automate creating separate PropTypes pages in your Storybook, brining the resultant URLs into ZeroHeight still\nwill be manual work. Also, the page is rendered in an iframe that does not detect the height of the content. Mostly,\nwhile JsDoc updates and the amount of properties changes, you will have an either too long iframe with an extra space or\ntoo short iframe with a scroll.\n\nNevertheless, the need to keep documentation for designers and developers in the same place, makes me put up with these\nobstacles and inaccuracies. In my current project, I will continue using this solution until and if better integration options\nappear.\n","fields":{"slug":"blog/proptypes-in-zeroheight/","disqusIdentifier":"blog-proptypes-in-zeroheight","readingTime":{"minutes":1.8}},"frontmatter":{"title":"PropTypes documentation in ZeroHeight","subTitle":null,"date":"16 June 2020","v2":null,"old":null,"tumblr":null,"tags":null,"meta":{"desc":"Detailed instruction on how to output the PropTypes table for a component in ZeroHeight and so keep your design system documentation up-to-date from both design and development perspectives.\n"},"canonical":null,"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#a89888","images":{"fallback":{"src":"/static/6bfd9e8587f777f115d8da7d0549e6f3/1fe34/thumb.jpg","srcSet":"/static/6bfd9e8587f777f115d8da7d0549e6f3/1fe34/thumb.jpg 1999w","sizes":"1999px"},"sources":[{"srcSet":"/static/6bfd9e8587f777f115d8da7d0549e6f3/0e491/thumb.webp 1999w","type":"image/webp","sizes":"1999px"}]},"width":1999,"height":1334}}}}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"blog/proptypes-in-zeroheight/","prev":{"id":"3d8bf7cc-35c1-5e06-b597-68c7a8742740","fields":{"slug":"blog/flatten-array-with-reduce/","disqusIdentifier":"blog-flatten-array-with-reduce","level":1,"fileRelativePath":"flatten-array-with-reduce/index.md","lang":"en","readingTime":{"minutes":2.385}},"frontmatter":{"title":"Flatten array with JavaScript reduce function","subTitle":null,"link":null,"v2":null,"old":null,"date":"2020-06-01T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/flatten-array-with-reduce/index.md"}},"next":{"id":"64ec2207-171b-5679-838d-f67ec19a1ded","fields":{"slug":"blog/stories-with-different-viewports/","disqusIdentifier":"blog-stories-with-different-viewports","level":1,"fileRelativePath":"stories-with-different-viewports/index.md","lang":"en","readingTime":{"minutes":3.275}},"frontmatter":{"title":"Generic Storybook stories with different viewports","subTitle":null,"link":null,"v2":null,"old":null,"date":"2020-08-12T00:00:00.000Z","layout":"post","tags":"storybook"},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/stories-with-different-viewports/index.md"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/proptypes-in-zeroheight/index.md","frontmatter":{"title":"PropTypes documentation in ZeroHeight","date":"2020-06-16T00:00:00.000Z","cover":"thumb.jpg","layout":"post","meta":{"desc":"Detailed instruction on how to output the PropTypes table for a component in ZeroHeight and so keep your design system documentation up-to-date from both design and development perspectives.\n"}}}},"staticQueryHashes":[],"slicesMap":{}}