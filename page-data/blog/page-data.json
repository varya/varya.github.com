{"componentChunkName":"component---src-templates-blog-index-js","path":"/blog/","result":{"data":{"posts":{"edges":[{"node":{"body":"\n<div data-excerpt>\n\nIn the ever-evolving landscape of design systems, the shift from a purely technical focus to a more people-oriented approach has become increasingly apparent. This transformation, driven by the need to bridge the gap between various specialists - designers, developers, product managers, and business strategists - has led to a more holistic view of design systems. This article delves into the journey of a design system specialist, the importance of measuring design systems, and the strategies for analyzing past production costs and projecting future workloads. It further explores the role of people in boosting design systems and the use of data in managing stakeholders.\n\n</div>\n\n## The Journey of a Design System Specialist\n\nAs an independent consultant, front-end engineer, and engineering manager, I have been focusing on design systems for over a decade. My journey began with libraries of components before the term \"design systems\" even emerged. Back then, the focus was more technical, with a lot of attention paid to coding components and documenting them.\n\nHowever, over time, my focus shifted. I realized that the biggest challenge was not the technical aspects but the gap between different specialists. This realization led me to pursue design education, which helped me see the bigger picture.\n\nToday, while I still do a lot of hands-on architectural front-end work related to design systems, my role has evolved. I now focus more on engineering, project management, and educating and engaging people.\n\n## The Importance of Measuring Design Systems\n\nOne of the key aspects of managing design systems is understanding how to measure their effectiveness. This understanding forms the basis for managerial decisions about the design system.\n\nUnfortunately, due to non-disclosure agreements, I can't share the exact data or screenshots of the tools we use. However, I can share a story that illustrates the importance of measuring design systems.\n\nOnce upon a time, a design system team realized that their backlog was too large for them to handle. They had many great ideas but not enough resources to implement them all. So, they approached their company's financial decision-maker, asking for more resources.\n\nThe problem was not that the design system was bad or that the team was underperforming. The problem was uncertainty. Everyone in the company knew that the design system was a good thing, but no one knew exactly how much value it brought to the business. The design system team operated on feelings, not knowledge supported by data.\n\nThis story was the first push towards measuring design systems. The initial goal was to convince the decision-maker to allocate more resources to the design system team. However, it grew into something bigger, which I will introduce to you step by step.\n\n## Analyzing the Past: Measuring Production Costs\n\nWhen analyzing the past, one of the most obvious metrics to measure is production costs. In other words, how much is the design system saving us? To illustrate this, let's imagine we have a component to implement, say a button.\n\n### The Cost of a Component\n\nThe cost of implementing a component in a single project includes both production time (designing and coding the button) and support costs (time spent on bug fixes, changes, etc.). These support costs are ongoing throughout the lifetime of the component. If we have multiple projects implementing and supporting their own versions of the same component, the costs multiply.\n\n### The Cost of a Design System\n\nWith a design system, the costs are split differently. The same amount of resources is needed to produce the component in the design system, but the projects only pay integration costs to use the component. These integration costs are usually paid once per project. By summing up these costs, we can calculate the total cost of producing and integrating a component through a design system.\n\n![](costs-without-ds.png)\n\n![](costs-with-ds.png)\n\n### Gathering Data\n\nThe question then arises: where do we get this data? This depends largely on your organization and projects. Here are some ideas:\n\n- **Production Time:** This can be assessed by the design system team or obtained from a task tracker. Alternatively, you can ask people implementing the components to document their time.\n- **Support Costs:** These are typically estimated. They can also be obtained from a task tracker, although this can be more complex.\n- **Integration Costs:** You can ask the users of the design system how much time it takes to integrate a component from the design system. Alternatively, you can get this data from a task tracker or estimate it yourself.\n- **Component Lifetime:** This can be obtained from version control (e.g., git history) or from design files.\n- **Amount of Projects:** This is usually known for sure.\n\n![](costs-whole.png)\n\n## Projecting the Future: Measuring the Process of Design Systems\n\nLooking to the future, we can measure the process of design systems. If we know our workload, we can check if our resources correspond to that workload. The workload includes features we want to implement in the near future and regular routine work like bug fixing and supporting teams.\n\n### Estimating Future Workload\n\nHow you estimate this number will depend on your organization. A good idea is to use a task tracker, which can provide data on your workload. Alternatively, you can estimate the workload based on your knowledge of the design system and its requirements.\n\nOnce you know your workload and resources, you can apply the resources to the workload and build models to see if you are managing or not.\n\n### Example: Implementing New Features\n\nLet's say we want to implement some new features, and we estimate that it will take 200 hours of work. We also know that the design system team spends a certain amount of time each week on tasks other than implementing new features.\n\nBy applying these numbers, we can build models to see if our resources match our workload. If the numbers don't add up, we know we need to adjust our resources or our workload.\n\n![](workload-dynamics-1.png)\n\n![](workload-dynamics-2.png)\n\n## Projecting the Future: Adjusting Resources and Workload\n\nWhen projecting the future, it's important to consider not only the workload but also the resources available. If the numbers don't add up, adjustments need to be made. This could involve increasing resources or reducing the workload.\n\n### Support Acceleration\n\nOne factor that can increase the workload over time is support acceleration. As more features are implemented and new components are introduced, the workload organically grows. New teams and projects start using the components, reporting bugs, and asking questions, which increases the support load for the design system team.\n\n### Contributions\n\nAnother way to increase resources is through contributions. People from other projects can help with the design system team's work. This can be achieved by investing in the community, such as running workshops, pair programming, co-designing, or improving documentation. The goal is to encourage fellow developers and designers to contribute more to the design system.\n\n### Building Models\n\nBy using these numbers, we can set goals, build hypotheses and models, and validate these hypotheses over time. This allows us to improve our projections for the future and make better decisions about our resources and workload.\n\nFor example, let's say we have two people working on the design system team, and we're aiming to implement new features that we estimate will take 200 hours of work. We also know that the team spends 15 hours each week on support and routine work. If we add in an estimated support acceleration of two hours per week and contributions equal to five hours of work per week, we can build a model to see if our resources match our workload.\n\nIf the numbers don't add up, we can adjust our model. We could increase the level of contributions to 10 hours per week, for example. This would require an investment in the community, but it could help us meet our goal.\n\n## Measuring the Present: Accessing Instant Data\n\nThe same data used to analyze the past and project the future can also be used to measure the present reality. This data, when instantly available, can guide us in a different direction.\n\n### Storing and Operating Data\n\nDifferent projects may use different methods to store such data, such as company wikis, internal websites, or online documentation systems. However, what worked best for business people was Excel or Google Sheets. These tools allowed them to operate with the data and potentially integrate it into their systems.\n\nIn the project I'm involved in, we use a custom script that crawls through the company's GitHub using an API. It gathers information on which components from the design system are integrated into the projects. This data is transformed into a CSV file and then imported into Excel.\n\n![](usage-1.png)\n\n### Usage Matrix\n\nAt the top of the Excel sheet, we have a usage matrix. This matrix shows which projects are using which components from the design system. For example, all projects might be using a button component, but only some are using an input or hero component.\n\n### Tool for Data Operation\n\nBelow the usage matrix is a tool that allows us to operate with the data. We can select a component, and the tool will calculate how many projects are using that component. It provides more extended data than when we calculated the past, showing exactly which projects are using the component. This tool can be used to approach specific projects if needed.\n\n### Using the Tool\n\nThis tool can be used in several ways. For example, if a library has critical updates for particular components, we can use the tool to identify which projects will be most affected by the update. We can warn these projects in advance or even invite them to a conversation before making the update.\n\n![](usage-2.png)\n\nWe can also see if a project is not using a component and ask why. Do they need help? Do we need to change something? Or do they just need a bit of support?\n\nThe design system team can use the tool to search for contributors, as the most likely contributors would be those people that are using the components. This tool is not only useful for the design system team but also for the teams using the design system.\n\n## People: The Key to Boosting Your Design System\n\nWhile data and numbers are important, the key to boosting your design system is people. People are the source of data, the ones we aim to connect with, and the ones we need to focus on.\n\n### Stakeholder Map\n\nTo better understand and connect with people, we can create a stakeholder map. This map can list the people involved in different projects, their roles, and other relevant information. For example, we could color-code people based on a recent satisfaction survey to see who is happy with the design system and who is not.\n\n![](stakeholders.png)\n\nThis stakeholder map can be linked to the tool I showed earlier, allowing us to see not only which projects are using a component but also who is involved in those projects. This gives us a tool based on reality for managing the stakeholders around the design system.\n\n### Open Access to Tools\n\nThe tools we use, such as Excel or Google Sheets, should be open to everyone in the company. Not only can the design system team and other teams use these tools to connect, but business people and management can also use them. For example, if there is a complex functional component like a login component in the design system, a team managing the login process would be interested in who is using this component.\n\n### Focusing on People\n\nWhen we count things from the past and aim for something in the future, it brings us to the present where we again have people. We need to ask about their experiences with the design system, about integration costs, about production costs, about support costs, and about their satisfaction. We also need to ask if they can help us.\n\nThe role of people in the design system world is a mature topic with many talks and articles about it. The key to the success of a design system is people. To boost your design system, you have to focus on people. And with the calculations we've discussed, you can focus on the right people and connect with them.\n\n## Then, what?\n\nIn conclusion, the success of a design system is not solely dependent on the technical aspects, but rather on the people who interact with it - the designers, developers, product managers, and business strategists. By focusing on people, measuring the effectiveness of design systems, and using data to guide decisions, we can significantly boost the performance and acceptance of our design systems. Tools like Excel or Google Sheets, while seemingly simple, can be incredibly powerful in managing stakeholders and providing real-time data for informed decision-making. The key takeaway is that people are at the heart of design systems. By understanding their needs, experiences, and contributions, we can create a design system that is not only technically robust but also people-oriented. As we continue to evolve and innovate in the field of design systems, this people-centric approach will undoubtedly remain a critical factor in driving success.\n\n<small>\nThis article is based on the content of a video presentation and has been created to provide a summary of the key points discussed. While I have strived to present the information accurately, some details may have been condensed or simplified for readability. For a comprehensive understanding of the topics covered, I highly recommend watching the original video in its entirety: <a target=\"_blank\" href=\"https://www.youtube.com/watch?v=OaqBxIp15hg\">Design system: from bookkeeping to championing</a>.\n</small>\n","excerpt":"","fields":{"slug":"blog/ppl-centric-design-systems/","readingTime":{"minutes":11.375}},"frontmatter":{"title":"A People-Centric Approach to Boosting Performance and Engagement in Design Systems","link":null,"date":"07 June 2023","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#d8d8c8","images":{"fallback":{"src":"/static/0cacad6462171232ce7d4f03f289aff7/44b03/people.jpg","srcSet":"/static/0cacad6462171232ce7d4f03f289aff7/44b03/people.jpg 5355w","sizes":"5355px"},"sources":[{"srcSet":"/static/0cacad6462171232ce7d4f03f289aff7/456c8/people.webp 5355w","type":"image/webp","sizes":"5355px"}]},"width":5355,"height":4016}}}}}},{"node":{"body":"\n<div data-excerpt>\n\nDesign systems play a crucial role in ensuring consistency and efficiency in product development. They provide a centralized repository of components, guidelines, and best practices that can be reused across projects. However, creating and maintaining a design system is not a one-person job and requires collaboration from multiple teams, including product development teams. One challenge in this process is how to effectively involve product teams in the contribution of components and updates to the design system.\n\n</div>\n\nIn this blog post, we'll explore different contribution models and analyze their strengths and weaknesses to help organizations find the best approach for their needs.\n\n### Self-Contribution Model\n\nThe self-contribution model is based on the idea that product teams build components on their own and bring them to the design system. This model is widely adopted and often seen as a straightforward way to involve product teams in the design system. However, this approach can lead to several problems.\n\nFirst, the model doesn't scale well. It assumes that product teams will have the time and motivation to contribute to the design system, but in reality, it's rare to have more than one or two enthusiastic contributors. This can lead to a lack of diversity in components and a slow pace of updates to the design system.\n\nSecond, the requirements of components in the design system are often different from those of individual projects. Design system components need to fulfill more requirements, such as accessibility, performance, and scalability, to ensure consistency across products. On the other hand, components in individual projects may prioritize different requirements, such as unique branding or functionalities. This can create a disconnect between the design system and product development teams and demotivate product developers from contributing.\n\nFinally, product development teams may not have the necessary skills and resources to contribute to the design system. They may lack the understanding of design system components and guidelines, or they may not have the tools and processes to integrate their components into the design system.\n\n#### Pros:\n\n- Easy to understand and implement\n- Encourages collaboration between product development and design system teams\n\n#### Cons:\n\n- Does not scale well\n- Creates disconnect between the design system and product development teams\n- Requires product teams to have the time and motivation to contribute\n\n### Pulling the Contributions Model\n\nThe pulling the contributions model is based on a different approach. Instead of asking product teams to contribute to the design system, this model allows product teams to build their own design systems, as long as they are built on top of the global company design system. This approach has several advantages over the self-contribution model.\n\nFirst, product teams have more control over their design systems. They can experiment with different components and updates and have the freedom to prioritize their requirements. This can lead to a more motivated and engaged product development team.\n\nSecond, this approach allows the design system team to see the components and requirements of different product teams. When similar components emerge across multiple sub-design-systems, the design system team can then \"pull\" these contributions and develop a component in the global design system that replaces them. This process can lead to a better understanding of the requirements of different products and a more comprehensive design system.\n\nFinally, this approach can lead to a more efficient use of resources. The design system team can focus on developing components that are used by multiple product teams, instead of developing components for each individual project.\n\n#### Pros:\n\n- Allows product teams to have more control over their design systems\n- Provides better understanding of requirements of different products\n- Increases efficiency in resource allocation\n\n#### Cons:\n\nThe drawbacks of the new model should be considered carefully:\n\n- Increased complexity<br/>\n  This model introduces an extra layer of complexity, as the design system team will need to manage multiple sub-design systems and ensure they are aligned with the global design system.\n\n- Potential for fragmentation<br/>\n  If sub-design systems are not properly managed and integrated, there is a risk of fragmentation and inconsistent design across different products.\n\n- Missed opportunities for collaboration<br/>\n  By giving product teams complete control over their own design systems, there may be missed opportunities for collaboration and cross-pollination of ideas and best practices.\n\n- Lack of control<br/>\n  The design system team may have less control over the development of sub-design systems, which could lead to subpar components or a deviation from the overall design guidelines.\n\n- Requires additional resources<br/>\n  This model requires additional resources, including tools for analyzing the code and tracking changes, as well as a larger design system team to manage the integration of sub-design systems into the global design system.\n\n- Slow implementation<br/>\n  Integrating multiple sub-design systems into a global design system can be a time-consuming process, which may result in delays and slow implementation.\n\n- Maintaining consistency<br/>\n  Maintaining consistency across multiple sub-design systems and ensuring they are integrated with the global design system can be a challenge, especially if the design system is constantly evolving.\n\nDespite these drawbacks, the \"pulling the contributions\" model offers unique benefits and can be a viable option for companies looking to enhance their design system and promote collaboration across teams. It's important to weigh the pros and cons of each contribution model and make a decision based on the specific needs and resources of the company. Ultimately, the success of a design system depends on a combination of factors, including clear goals, flexible processes, and effective communication and collaboration between product and design teams.\n\nIn conclusion, there are several approaches to designing a successful contribution model for a design system. The traditional model, where product teams are expected to contribute components on their own, has limited scalability and may not effectively address the unique requirements of each product. An alternative approach is \"pulling the contributions\", where product teams are given the autonomy to develop their own design systems and the design system team can later integrate the best components. This model has the potential to address the requirements of each product more effectively and promote collaboration across teams, but it also requires resources and tools for analysis and tracking. Ultimately, the right contribution model will depend on the specific needs and resources of each company and can be adjusted as the design system evolves. Regardless of the approach, a successful design system should be flexible, scalable, and aligned with the needs of the product teams and the overall business goals.\n\n<div Style=\"text-align: right;\"><small>\nCover photo by <a href=\"https://unsplash.com/@stijnswinnen?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Stijn Swinnen</a> on <a href=\"https://unsplash.com/photos/Q8FHN3qSq2w?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n</small>\n</div>\n","excerpt":"In this blog post, we'll explore different contribution models and analyze their…","fields":{"slug":"blog/pulling-the-contributions/","readingTime":{"minutes":5.46}},"frontmatter":{"title":"Exploring Contribution Models for Design Systems","link":null,"date":"07 February 2023","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#180808","images":{"fallback":{"src":"/static/1be6ee6e99d95452d05d1e3e0d4bbbbd/eb88e/pull.jpg","srcSet":"/static/1be6ee6e99d95452d05d1e3e0d4bbbbd/eb88e/pull.jpg 4768w","sizes":"4768px"},"sources":[{"srcSet":"/static/1be6ee6e99d95452d05d1e3e0d4bbbbd/f59b3/pull.webp 4768w","type":"image/webp","sizes":"4768px"}]},"width":4768,"height":3179}}}}}},{"node":{"body":"\n<div data-excerpt>\n\nDesign systems are an essential aspect of any company or organization, and it is the responsibility of design system practitioners to understand and maintain them. One crucial aspect of this is versioning, which ensures that changes are tracked, documented, and communicated properly. It also helps guarantee that the design system remains consistent and up-to-date with the latest trends and technological advancements. In this article, we will discuss best practices for versioning design systems.\n\n</div>\n\nOne important practice is to have a defined process for how new versions of components and systems will be introduced into production. This process should include testing by both design and development teams before deployment, as well as communication with stakeholders regarding any changes that may affect functionality or usability in any way. Having these steps clearly outlined will help ensure that everyone is on board with releases before they go live, which can save time and money down the road.\n\nAnother practice is to use version numbers and semantic versioning. The first step in effective versioning is assigning each version of your design system with a unique version number. This allows you to easily identify which version of your system someone is using, and track changes over time. Good practice dictates that you use semantic versioning for this purpose, which assigns each version a three-part code (e.g., 1.2.3). The major number indicates major changes or updates (e.g., new features), the minor number indicates minor changes or bug fixes, and the patch number indicates minor bug fixes or other small improvements to existing features. This helps ensure everyone is on the same page when discussing different versions of your design system, as well as when tracking bugs or other issues with specific versions of the system.\n\nThe next important thing to do is to create a changelog and communicate changes. Having a changelog that documents each update is essential for tracking progress over time. The changelog documents the updates, improvements and bug fixes made in each version of your design system. This allows designers, developers, and stakeholders alike to look back at previous versions of components and see what has changed since then, making it easier to identify bugs and other potential issues. Additionally, it’s important to communicate these changes with stakeholders so they understand why certain updates were made, as well as how they may affect the final product.\n\nFinally, it is important to strive for backwards compatibility with each new release of your design system. By ensuring backwards compatibility as much as possible, you minimize any potential disruptions that could occur due to unexpected updates breaking existing functionality in other products. This will help ensure that everyone is able to keep up with whatever changes may come down the line without having to worry about unexpected surprises along the way.\n\nIn conclusion, versioning your design system can seem like an intimidating task, but by following these best practices, you can have confidence knowing that everything will run smoothly when it comes time for making updates. Remember to use unique version numbers and semantic versioning conventions; create useful changelogs; communicate effectively with development teams; document life cycles; and strive for backwards compatibility will help ensure everything runs as smoothly as possible throughout every stage of production. With these strategies in place, you can rest assured knowing that every new iteration of your design system will be just as successful, if not more so, than its predecessor.\n\n### More articles on the topic\n\n- [Versioning Design Systems. Communicating Change Clearly to People Using Systems](https://medium.com/eightshapes-llc/versioning-design-systems-48cceb5ace4d) by Nathan Curtis\n- [Version control best practices for design systems](https://www.knapsack.cloud/blog/version-control-for-design-systems) by Michael J. Fordham\n- [Versioning Design Systems: Best Practices](https://intodesignsystems.medium.com/versioning-design-systems-best-practices-ca8508653480) by Intodesignsystems\n- [Design system versioning: single library or individual components?](https://bradfrost.com/blog/post/design-system-versioning-single-library-or-individual-components/) by Brad Frost\n\n<div Style=\"text-align: right;\"><small>\nCover photo by <a href=\"https://unsplash.com/@dnevozhai?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Denys Nevozhai</a> on <a href=\"https://unsplash.com/photos/k5w21D7PgMk?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Unsplash</a>\n</small>\n</div>\n","excerpt":"One important practice is to have a defined process for how new versions of components and systems…","fields":{"slug":"blog/design-system-versioning-basics/","readingTime":{"minutes":3.195}},"frontmatter":{"title":"Mastering Version Control — Best Practices for Design System Versioning","link":null,"date":"30 January 2023","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#382828","images":{"fallback":{"src":"/static/39b81c2c7a91bbb303670b861cb6102e/a0fb6/roads.jpg","srcSet":"/static/39b81c2c7a91bbb303670b861cb6102e/a0fb6/roads.jpg 4660w","sizes":"4660px"},"sources":[{"srcSet":"/static/39b81c2c7a91bbb303670b861cb6102e/8a5ad/roads.webp 4660w","type":"image/webp","sizes":"4660px"}]},"width":4660,"height":7538}}}}}},{"node":{"body":"\n<div data-excerpt>\n\nOften happens that an npm package should be published to a secure registry. In many cases, organizations have their own and all the internal stuff goes there. But what to do if your organization does not have anything like that? Apparently, [Github Packages](https://docs.github.com/en/packages) are the way to go. In case your repository is private, its packages will be too! Below, I describe a simple workflow that I set today.\n\n</div>\n\nIn this case, the packages are built and published in a pipeline operated by [Github Actions](https://github.com/features/actions). To set a workflow there, you would need to create a YAML file in the `.github/workflows/` folder. This is mine, for a package called `@yourscope/design-library`.\n\n```\nname: Release library\n\non:\n  push:\n    branches:\n      - main\n  workflow_dispatch:\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n\n      - name: Install NodeJS\n        uses: actions/setup-node@v3\n        with:\n          node-version: \"16\"\n          registry-url: \"https://npm.pkg.github.com\"\n          scope: \"@yourscope\"\n\n      ### Check in, install, and build as your project needs it\n\n      - name: Release package\n        run: |\n          npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\nNote that when publishing, there should be the `NODE_AUTH_TOKEN` environmental variable available. However, its value is `GITHUB_TOKEN` taken from secrets. You don't need to generate such a secret, your repository already has it in the background.\n\nAnother thing to spot is that when installing Node, you should define the npm registry and the scope. That can be done with additional parameters as shown in the code example.\n\n## How to release?\n\nReleases are happening in a pipeline via GitHub Actions once the `main` branch is updated. Releases are successful if the version number is unique. Practically, that means that a design-system developer needs to change the version number to trigger the release. There is room for improvement — it would be much nicer not to run the publishing job if the package of such a version already exists.\n\n## How to get the package?\n\n### Authentification at GitHub Packages\n\nThe GitHub Package registry is not open, you should get an access to it. For that, you need to authenticate.\n\n1. Create your _Personal Access Token_ at GitHub here https://github.com/settings/tokens\n   - It's a good habit to have a separate token for each project\n   - Name it using the _Note_ field so that later you understand what the token is for\n   - The token should at least have _read:packages_ permission\n   - Do not forget to copy the token after you have it generated\n2. Login to the npm registry:\n   ```\n   npm login --scope=@yourscope --registry=https://npm.pkg.github.com\n   > Username: USERNAME\n   > Password: TOKEN\n   > Email: PUBLIC-EMAIL-ADDRESS\n   ```\n\nFor more information, follow the official GitHub documentation: https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-npm-registry#authenticating-with-a-personal-access-token\n\n### Installing the design-system package at the very first time\n\nBefore installation, you need to communicate that `@yourscope` npm packages should\nbe taken from GitHub Packages. You can do it by adding an `.npmrc` file to the root of your project. The content of the file should be as the following:\n\n```\n@yourscope:registry=https://npm.pkg.github.com\n```\n\nKeep the `.npmrc` file under version control so that your colleagues also could get the packages from the right place.\n\nNow, you can install the package:\n\n```\nnpm install --save @yourscope/design-system\n```\n\nor\n\n```\nyarn add @yourscope/design-system\n```\n\n### Installing project dependencies\n\nIf you have a project with `@yourscope/design-system` as a dependency, when being authorized, you should be able to install it together with all the other dependencies:\n\n```\nnpm install\n```\n\nor\n\n```\nyarn\n```\n","excerpt":"In this case, the packages are built and published in a pipeline operated by Github Actions. To set a workflow there, you would need to create a YAML file in the  folder. This is mine, for a package called .…","fields":{"slug":"blog/publish-packages-on-github/","readingTime":{"minutes":2.81}},"frontmatter":{"title":"GitHub package — way to go for your private npm packages","link":null,"date":"03 August 2022","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#080828","images":{"fallback":{"src":"/static/597e8fb61204ff6aed90e726fab7adcc/fae27/storage.jpg","srcSet":"/static/597e8fb61204ff6aed90e726fab7adcc/fae27/storage.jpg 3024w","sizes":"3024px"},"sources":[{"srcSet":"/static/597e8fb61204ff6aed90e726fab7adcc/7d916/storage.webp 3024w","type":"image/webp","sizes":"3024px"}]},"width":3024,"height":4032}}}}}},{"node":{"body":"\n<div data-excerpt>\n\nIn our [design system] team, we struggled to understand what should be our main focus\nfor the next year. An extra challenge is that such an understanding should be mutual.\nIt is especially hard to gain when working remotely. Since March 2020, most companies have sucessfully put the already set processes to the remote rails. However, it is not always\nthe case when it comes to creating something **new**. Despite the brainstorming sessions\nwith interactive boards, we still act more as individuals sitting in our living rooms and basements. This is something compeletely different from the situation when the whole team\nwas in the same room, when we had coffee breaks, lunches and afterworks, when we were in\nconstant communication and each team member at least partly understood the viewpoint of\nthe others. The new reality requires specific actions to substitude the natural process\nof getting each other. In this post, I share simple exercises we conducted with the team\nthat helped us on the way to shared project vision.\n\n</div>\n\n## Extended workshop and pair exersices\n\nIn fact, we had a traditional workshop with some taks and interactive whiteboards\nto complete them. But we made it extended in time, and this had a special meaning.\n\nOur team is 4 people, and we worked on 3 exercises in pairs. Such combination made it\npossible that every team member works with each and every of their fellows.\n\n<Image caption=\"Image source: https://www.africanbusinessreview.co.za/the-best-outdoor-team-building-activities.html\">\n![](./team.jpeg)\n</Image>\n\nThe pair combinations were as the following:\n\n- **Exercise 1**: Rose & Sean; Yves & Nicole\n- **Exercise 2**: Rose & Yves; Sean & Nicole\n- **Exercise 3**: Yves & Sean; Rose & Nicole\n\nThe task: _In all the exercises: think about the (sub)project you are committing as a member of a [design system] team. What are your goals for the rest of 2021 and in 2022? What are you doing? What do you want to achieve?_\n\nBy the plan, each team member should have done all the exercises. Each exersice had a specific goal but in general they were similar: one of the pair shares their vision and\nanswers the questions while another one facilitates and writes down the outcomes.\nWorking in pairs helped us to focus on each other more than in our group conversations.\n\nIt was possible to run all the exersices in one session using the breakout rooms but we\nhad them separately on different days, and for a reason. In all the exersices each of us needed to communicate our vision. We also needed to be very specific on that because it was our pair who wrote down the outcome. It happened, and I noticed that myself, that own\nunderstanding of the environment and the goals ahead crystalizes (sometimes even changes) when pronounced again and again. It was a good thing to sleep over with the ideas that had been just articulated, so that the next day they are more clear for its own author.\n\n## Exercise 1. The Context Onion\n\nBefore we came to the goals, it was useful to undestand our context.\n\n_Where are we as\nindividuals and our team on the organization map? Does our project belong to some\nbigger strutural unit or serve larger goal? What is its environment?_\n\nWhile the one was sharing their view, the other team member drew an onion diagram to reflect\nthe pronounced. In the outcome, we should see the whole context and also the highlighed\nactions on the different levels that affect the actor and the project.\n\n![](./context-onion.png)\n\n## Exercise 2. The impact we desire\n\nBeing mentally put into the right context, we managed to start thinking of what is the\nimpact we desire. That helps a bit to ground it down, so the next exersice was to\nfigure out the year goal(s) and the milestones on the way to it. While the one was\nspeaking on the topic, the facilitator guided them with the questions and drew a timeline with the goal that was a year ahead, and actions to complete in 6 months, 3 months and 1 month from now.\n\n![](./the-impact.png)\n\n## Exercise 3. Success criteria\n\nThe last exersice didn't require much drawing as the timeline could be borrowed from the previous one. However, since the workshop schedule assumed a different pair, it still required to explain the whole picture. After that, we needed to define the success criteria\nfor all the steps.\n\n_What exactly do you have to achieve in order to pronounce your \"project\" complete? What should be the success criteria on the go: in 6 months, in 3 months, in 1 month?_\n\nThis is also the moment when the context onion from the first exercise can help once again. _Is the success defined by you only or by the other layers too?_\n\n![](./success-criteria.png)\n\n## Common session. Summarise and reflect\n\nAfter all the exercises, we had a common session where we finally saw all the results together. After presenting them one by one, we combined all the timelines into one, identified logical connections between some actions, and adjusted the timeframes.\n\nIt depends on the project nature and scope, if you can take the outcome as your roadmap without dramatic changes. In the case of our project — no. But the **visualised shared vision** is a huge step towards such a roadmap. It is also great help when communicating with the other stakeholders on behalf of the whole team.\n\n![](./shared-vision.png)\n\nThe execises idea: [Facilitating change. Online Course for Change Leaders](https://medium.com/facilitating-change-2021)\n","excerpt":"","fields":{"slug":"blog/shared-project-vision/","readingTime":{"minutes":4.56}},"frontmatter":{"title":"Shared project vision — a series of exercises for teams","link":null,"date":"07 October 2021","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/a1ce26521dd5ff22e8379ff291971305/0518c/shared-vision.png","srcSet":"/static/a1ce26521dd5ff22e8379ff291971305/0518c/shared-vision.png 3509w","sizes":"3509px"},"sources":[{"srcSet":"/static/a1ce26521dd5ff22e8379ff291971305/498e7/shared-vision.webp 3509w","type":"image/webp","sizes":"3509px"}]},"width":3509,"height":2392}}}}}},{"node":{"body":"\n<div data-excerpt>\n\nLast year, I started my own consulting business. I have expertise and experience to offer for my clients who are willing to enhance their design and development operations and, in particular, kick-off or boost their design systems. For many months, I was working alone. And then I began to think: how can I scale? Usually, new entrepreneurs work day and night without any holiday, get clients to occupy 16 hours of their time every day, gain credibility, and partner with spin-off projects. I immensely enjoy what I am doing, and dedicating all my time to it would be only a pleasure, but as a mother of a 1-year-old, I do not have this luxurious opportunity.\n\n</div>\n\nThat made me think: is there anything unique I can offer that not only helps clients but also develops my business? Are there any skills and experience that could be turned into competitive advantage? And yes, there are! Besides technical and design achievements in my past career, I understand how to raise the people in our professional field. At my previous jobs, I used to be a team leader for up to 18 people, often guiding them through their professional development. Of course, as a new entrepreneur, I could not hire that many, but I still can use the gained knowledge and experience to work with people and for people.\n\n## Searching for helping hands\n\nHalf a year ago, I posted on Twitter that I need helping hands, mostly for my side projects. The initial idea was to release some of my time while my fellow developer helps me with coding challenges that belong to myself, not to the client projects. I interviewed ten developers who positioned themselves as juniors or middle-level developers. My special pride in the process is that there were no annoying coding questions and time-consuming trial tasks. I only spoke with each candidate for about half an hour. During those talks, I introduced myself, described my business and the potential projects, learned about the people. We discussed possible collaboration and compensation. The most important factor for me was a personal match. I was not worried about a possible lack of knowledge and experience: the end goal was to teach and guide. I must say that all the candidates I had in that round would very well fit the role. I would even qualify many of them as far more than juniors. Because of that, I based my decision on how much I could help my future-to-be employee and partner. It was in the middle of a pandemic, and I figured out that my responsibility is to make a path to the IT market for the people whose previous industries suffered the most. Thus, half a year ago, I started to work with [Irina Illustrova](https://www.linkedin.com/in/illustrova/), (aka Ira), and it went far beyond the initial plan.\n\n## Our projects\n\nI arranged the working schedule so that my business goals and Ira’s professional development goals aligned. Namely, the projects she was getting into work enhanced her knowledge of technologies gradually. As an extremely talented, hard-working, and enthusiastic, she did not need hour-to-hour guidance, but I defined the general focus that helped her in a short time to learn everything required for a future successful frontend engineer career.\n\nOur very first project was redesigning and refactoring my website [https://varya.me/](https://varya.me/). It was not just technical work! The challenge included elements of product design, content management, user experience aspects, and workflows. We had co-creation workshop sessions where we applied the design methods to figure out the work's scope. From the technical perspective, the knowledge boost included hands-on experience with GatsbyJS, styled-components, and Storybook. In reasonable time, my website was entirely re-made: enchanted in SEO aspect, automated where it was possible, code-cleaned but backward compatible with its previous version. During this project, we discovered the time-saving working model that still ensures regular alignment and knowledge progress.\n\nIn the next project, we managed to go further and at the same time re-use the gained knowledge. It was a side project by myself and [Nikita Sherbakov](https://linkedin.com/in/nikita-sherbakov). Unfortunately, I cannot share the project name and description until we release it. But tech-wise, for Ira, it was deeper learning and practicing of Gatsby, including its advanced features. Similar to re-making my website, this project required writing a library of React components, but some of them were far more complex. Besides, some parts of the project were implemented with NextJs and utilized GitHubActions. During this work, Ira and Nikita e-met, and we managed to work together in a small team. On the way towards client projects, a growing developer also needs to collaborate with others and try different workflows for such collaboration. That is as important as technical skills, if not more.\n\nIn the following gig, we stayed the course with gradual technological enhancement and considered the community impact. As a frequent conference speaker, I missed a tool that enables me to write my slides with Markdown and empower them with React components (aka MDX). Generally, I use [Shower](https://shwr.me/) for my slides. So, as the presentation engine part was already covered, we focused on the markdown transformation. It was another chance to code with NextJs and provide advanced customizations to its default setup. In that project, we anchored the concept of automation: in particular, with the help of GitHub Actions, the tool now has continuous releases. Notable that it is an open-source project with which we could practice community management and bits of technical marketing. You can explore the code on GitHub https://github.com/varya/shower-mdx or visit the project demo page https://varya.me/shower-mdx/\n\nBy today, ourlast technically completed project is a landing page of Nikita’s and mine upcoming workshop “[Hands-on with design systems](https://hands-on-workshop.varya.me/)”. At the moment, Ira and I continue working on the handout website with the exercises for the workshop participants, but the landing page has already been released. Even though it is maybe the simplest among our typical projects, it enabled Ira to consolidate the NextJs knowledge and train on Tailwind. Thanks to continuous releases with GitHub Actions, quick fixes to the website texts are zero pain. Besides, we have an A/B test analyzed with GoogleAnalytics — something that will be very much reusable for larger businesses as well.\n\n## Tandem model\n\nNow, half a year after our start, I believe that training on my own projects is over. It is time to move on!\n\nHowever, I am very much encouraged by the progress we made in such a short time. The current plan is to continue the training but on the client projects. Thinking of that, I came to a \"tandem model” for our clients. The idea is that the client gets a middle-level engineer full-time and an experienced leader for, say, two days a week. Guided with the leader, the middle-level engineer uses their time the most effectively. My experience as a leader guarantees that together, we can overcome all the challenges. At the same time, the average rate is lower. This way, the client gets the expected quality of work but for a competitive price. In Ira’s case, I trained her myself, so we have a history of working together, I know how to lead her, I see what she can do entirely on her own and what she still needs guidance with. This knowledge very much helps to plan the work and later meet that plan.\n\n![](./timeline.png)\n\nWe managed to deliver this proposition to one of the clients, and they appreciated the dramatic (cannot say how much but impressive) cost savings ensured by this model. At the same time, having a “real” project for Ira contributes to her speedy growth. My gut feeling, that by the end of this year she may gain a title of senior frontend engineer!\nI do not share here the tandem model details, but I have sales materials that explain it in numbers. If interested, just contact me for it.\n\n## What for?\n\nThe journey described above is not only a successful business story on how a solo consultant can grow to a team and at the same time propose value to their clients. Along the way, I had a chance to reflect on the social impact I make. The consultancy business is often represented as an opposition to product companies. Many say that as a consultant, you work for soulless companies rather than bring value to the people. But I believe that with the activity described above I discovered the opportunity to be useful. There are a lot of self-study people in IT (including myself) but I realise that not everyone has an opportunity to dedicate enough unpaid time for it. Men, people without kids and those who are financially supported by parents or partners win this race. My personal impact is that I can pay salaries for the less privileged while they are polishing their technical and product skills. Everyone wins: I have my projects done, my clients get helping hands whose work I approve and ensure the quality, a nearly senior developer comes to market. Together, as a whole humankind, we experience less inequality.\n","excerpt":"","fields":{"slug":"blog/raising-new-devs/","readingTime":{"minutes":7.575}},"frontmatter":{"title":"How I boost my consultancy business raising new developers","link":null,"date":"02 March 2021","cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#d8d8d8","images":{"fallback":{"src":"/static/8f31bad37d8245d03159a4a229295a11/add31/thumb.jpg","srcSet":"/static/8f31bad37d8245d03159a4a229295a11/add31/thumb.jpg 6720w","sizes":"6720px"},"sources":[{"srcSet":"/static/8f31bad37d8245d03159a4a229295a11/02e9a/thumb.webp 6720w","type":"image/webp","sizes":"6720px"}]},"width":6720,"height":4480}}}}}}]}},"pageContext":{"limit":6,"skip":0,"pageCount":9,"currentPage":1}},"staticQueryHashes":[],"slicesMap":{}}