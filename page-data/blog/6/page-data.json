{"componentChunkName":"component---src-templates-blog-index-js","path":"/blog/6/","result":{"data":{"posts":{"edges":[{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Style-guide the smaller things\",\n  \"date\": \"2015-07-30T00:00:00.000Z\",\n  \"v2\": true,\n  \"layout\": \"post\",\n  \"meta\": {\n    \"desc\": \"A story about how I tried to use SC5 Style Guide on my tiny tiny blog project and aparently got see the CSS architecture from completety different perspective.\\n\"\n  }\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"I've been presenting \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://styleguide.sc5.io/\"\n  }, \"SC5 Style Guide\"), \" several times during this year sharing my experience of using it for one\\nof the SC5's clients, Elisa. Assuming that Elisa is a huge mobile operator with a lot of websites and a need\\nto keep those websites visually consistent, there is no wonder that the SC5 Style Guide as a tool provides benefits\\nthere. But what about smaller websites? Would it be useful there? I did not know the answer to this question\\nand wanted to experiment. The experiment was conducted on my blog codebase.\")), mdx(\"p\", null, \"This is how the Living Style Guide looks like: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide\"\n  }, \"varya.me/styleguide\"), \". You can see the interface\\ndecomposed into block pieces, each of those representing a meaningful interface unit. I haven't seen the interface of my blog\\nfrom this perspective before. It gave me a lot of insight into the ways the CSS architecture of my blog should be designed.\\nBut, let's consider things one by one.\"), mdx(\"h2\", {\n    \"id\": \"fine-tuning-the-sc5-style-guide-tool\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#fine-tuning-the-sc5-style-guide-tool\",\n    \"aria-label\": \"fine tuning the sc5 style guide tool permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Fine-tuning the SC5 Style Guide tool\"), mdx(\"p\", null, \"Everything starts with\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"npm install --save-dev sc5-styleguide\"))), mdx(\"p\", null, \"Then, I was able to use the tool to build the interface representation. It required\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/blob/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/Gulpfile.js\"\n  }, \"a couple of Gulp tasks\"), \".\"), mdx(\"p\", null, \"I had to deviate from the example configuration in a couple of places to make my Style Guide work as it does now. Let me\\nname and explain these things.\"), mdx(\"h3\", {\n    \"id\": \"providing-the-code-classlanguage-textapprootcode-parameter\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#providing-the-code-classlanguage-textapprootcode-parameter\",\n    \"aria-label\": \"providing the code classlanguage textapprootcode parameter permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Providing the \", mdx(\"code\", {\n    parentName: \"h3\",\n    \"className\": \"language-text\"\n  }, \"appRoot\"), \" parameter.\"), mdx(\"p\", null, \"As I am hosting the Style Guide website not it the root folder but in a subfolder named \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"styleguide\"), \", I inform the\\ngenerator about that, so it can build the properly working app:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"gulp\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"task\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"styleguide:generate\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" gulp\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"src\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"desktop.blocks/**/*.css\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"pipe\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"styleguide\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"generate\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"title\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"Varya.me Styleguide\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"appRoot\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'/styleguide'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\")))), mdx(\"h3\", {\n    \"id\": \"providing-scripts\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#providing-scripts\",\n    \"aria-label\": \"providing scripts permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Providing scripts\"), mdx(\"p\", null, \"Under the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"extraHead\"), \" parameter I list all the additions needed. Some of my components\\nneed JavaScript to function. It is indeed possible to ignore that and present\\ntheir views only, but I wanted them to be exactly as they were used in the blog.\\nThanks to \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"extraHead\"), \" I could supply any code needed. I used it to\\nlink the same scripts that I have on my blog pages:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"gulp\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"task\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"styleguide:generate\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"function\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" gulp\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"src\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"desktop.blocks/**/*.css\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"pipe\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"styleguide\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"generate\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"title\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"Varya.me Styleguide\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token literal-property property\"\n  }, \"extraHead\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'<script src=\\\"http://yandex.st/jquery/1.7.2/jquery.min.js\\\"></script>'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"'<script src=\\\"/desktop.bundles/index/index.min.js\\\"></script>'\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\"), \"\\n      \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"...\")))), mdx(\"p\", null, \"However, I needed yet another trick to make the scripts work properly. My components are written with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"i-bem.js\"), \"\\nframework which automatically initialises them on the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"domReady\"), \" event. This is what I wanted for the static pages because the\\ncomponents markup is in HTML document. But for the Style Guide, which is architecturally a SPA, this did not work. The components\\nare rendered on the fly, and this obviously happens after \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"domReady\"), \"; that is why by default they stay\\nuninitialized. So they should be initialized after they had been rendered. Luckily, the Style Guide\\ntriggers an event on the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"window\"), \" object named \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"styleguide:onRendered\"), \" every time a new component is re-rendered.\\nBy handling this event, I managed to get the components initialized right after they appear on the page. This code is needed\\nfor the Style Guide only, so I do not include it into the project bundle but provide as an additional script in the\\nStyle Guide configuration:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"gulp.task(\\\"styleguide:generate\\\", function() {\\n\\n  return gulp.src([\\\"desktop.blocks/**/*.css\\\"])\\n    .pipe(styleguide.generate({\\n      title: \\\"Varya.me Styleguide\\\",\\n      ...\\n      extraHead: [\\n        ...\\n        '<script src=\\\"/styleguide/i-bem__init_styleguide.js\\\"></script>'\\n      ]\\n    ...\"))), mdx(\"p\", null, \"You can check how the JavaScript components are working with the block which is initially empty and renders the list\\nof repositories after querying the GitHub API: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/4.3\"\n  }, \"varya.me/styleguide/#/section/4.3\"), \".\\nOr try out the Candies randomly built with JavaScript \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/5.1\"\n  }, \"varya.me/styleguide/#/section/5.1\"), \".\"), mdx(\"p\", null, \"The last important thing to make JavaScript work is to use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"disableEncapsulation: true\"), \" parameter. Normally the\\nStyle Guide wraps each component in the ShadowDOM because it lets us developers write component CSS without\\nworrying about affecting the Style Guide interface. But it also makes the components scoped from the JavaScript linked\\nto the Style Guide website \\u2014 including that additional JavaScript I showed above. By disabling the encapsulation, I made\\nthe components to be inserted into the HTML page as they are, without any scoping. As for affecting the Style Guide\\ninterface, in my case it will never happen as I use BEM and all my components are already \\\"encapsulated\\\" thanks to that methodology.\"), mdx(\"h3\", {\n    \"id\": \"hosting-a-static-page\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#hosting-a-static-page\",\n    \"aria-label\": \"hosting a static page permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Hosting a static page\"), mdx(\"p\", null, \"The SC5 Style Guide provides a development server which routes all the paths to its root. When hosting it outside, you\\nshould care about the routing yourself as you would do for any other SPA. But my blog is hosted on GitHub Pages\\nwhich is a simple static hosting and does not provide any routing capabilities. For managing this case, I use the\\n\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"disableHtml5Mode: true\"), \" option. It makes the Style Guide application generate the old-school links with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"#\"), \". And so it\\nworks.\"), mdx(\"h2\", {\n    \"id\": \"documenting-the-components\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#documenting-the-components\",\n    \"aria-label\": \"documenting the components permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Documenting the components\"), mdx(\"p\", null, \"As I used BEM for my website frontend from very beginning, the CSS was already written the component-way. I only\\nneeded to create a descriptive structure and document the blocks with KSS.\"), mdx(\"h3\", {\n    \"id\": \"structuring-the-code\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#structuring-the-code\",\n    \"aria-label\": \"structuring the code permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Structuring the code\"), mdx(\"p\", null, \"Unfortunately the BEM way of storing components in folders turned out to be not good enough to see\\nthe code from the living-style-guide perspective. On a file system, all the components are represented at the same\\nlevel which turns them into a long list without much structure:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"desktop.blocks/\\n\\u251C\\u2500\\u2500 article\\n\\u251C\\u2500\\u2500 articles-list\\n\\u251C\\u2500\\u2500 box\\n\\u251C\\u2500\\u2500 ...\\n\\u2514\\u2500\\u2500 text\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/tree/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/desktop.blocks\"\n  }, \"github/varya/varya.github.com/desktop-blocks\")), mdx(\"p\", null, \"In this case the atomic components are not distinct from the structural interface pieces (such as Header or Footer),\\nfrom the side blocks, or from CSS provided to style third-party things. Flat structure is indeed good for\\nbundling tools but we humans need more logical nesting.\"), mdx(\"p\", null, \"For that I provide the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"overview.css\"), \" file, which has nothing to do with the final product and only helps me arrange the\\nblocks. I have 5 sections, in which I place the blocks depending on what they are:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"/*\\nAtoms\\n\\nStyleguide 1\\n\\nstyleguide:ignore:start\\n\\n@import url(\\\"logo/logo.css\\\"); // 1.1\\n@import url(\\\"text/text.css\\\"); // 1.2\\n...\\n\\nstyleguide:ignore:end\\n*/\\n\\n/*\\nMain blocks\\n\\nStyleguide 2\\n\\nstyleguide:ignore:start\\n\\n@import url(\\\"header/header.css\\\"); // 2.1\\n...\\n\\nstyleguide:ignore:end\\n*/\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/blob/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/desktop.blocks/overview.css\"\n  }, \"github/varya/varya.github.com/desktop-blocks/overview.css\")), mdx(\"p\", null, \"There are only comments in this file in which I provide the documentation of every subset as a Style Guide section.\\nListing the paths of the dependant CSS files makes it easier to navigate through the code. The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"@import\"), \" syntax is used just\\nbecause :-)\"), mdx(\"p\", null, \"The only trick here is the magic \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"styleguide:ignore:start\"), \" and \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"styleguide:ignore:end\"), \" keywords. It is possible to\\nplace them inside comments in any piece of your CSS (or SASS or LESS) and make the Style Guide generator ignore\\nwhat is in between.\"), mdx(\"p\", null, \"In my case, I tell it skip my overview lists because they have nothing to do with the codebase. But the names of the\\nsections and their possible descriptions (I just haven't provided any) are in work.\"), mdx(\"h3\", {\n    \"id\": \"describing-the-pieces\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#describing-the-pieces\",\n    \"aria-label\": \"describing the pieces permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Describing the pieces\"), mdx(\"p\", null, \"Everything else went smoothly. For every component I provided the KSS description. The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"logo\"), \" block can be the\\nsimplest example:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"css\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-css\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"/*\\n\\nLogo\\n\\nmarkup:\\n<logo class=\\\"logo\\\">\\xB7\\xB7\\xB7<b class=\\\"var\\\">var</b>\\xB7<b class=\\\"ya\\\">ya</b>;<b class=\\\"cursor\\\"></b></logo>\\n\\nStyleguide 1.1\\n\\n*/\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \".logo\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n...\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/blob/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/desktop.blocks/logo/logo.css\"\n  }, \"github/varya/varya.github.com/desktop-blocks/logo/logo.css\")), mdx(\"p\", null, \"See it rendered: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/1.1\"\n  }, \"varya.me/styleguide/#/section/1.1\")), mdx(\"p\", null, \"In some other components I used extra features. For example, different social icons are the same \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ico\"), \" element with different\\nmodifiers. In the Style Guide I could documents them all together:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"css\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-css\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"/*\\nSocial icon\\n\\n.social-ico__ico_type_rss         - RSS\\n.social-ico__ico_type_twitter     - Twitter\\n.social-ico__ico_type_github      - Github\\n.social-ico__ico_type_facebook    - Facebook\\n.social-ico__ico_type_linkedin    - LinkedIn\\n\\nmarkup:\\n<a class=\\\"link social-ico__ico {$modifiers}\\\" href=\\\"#\\\" title=\\\"Icon title\\\"></a>\\n\\nStyleguide 1.5.1\\n*/\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \".social-ico__ico\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n...\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/blob/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/desktop.blocks/social-ico/social-ico.css#L49\"\n  }, \"github/varya/varya.github.com/desktop-blocks/social-ico/social-ico.css\")), mdx(\"p\", null, \"In the website the component is rendered separately with every modifier possible:\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/1.5.1\"\n  }, \"varya.me/styleguide/#/section/1.5.1\")), mdx(\"p\", null, \"For the complex components which contain other ones I used \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"<sg-insert>\"), \" keyword. It takes another component's markup\\nby its reference number.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"css\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-css\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token comment\"\n  }, \"/*\\nSidebar\\nmarkup:\\n<nav class=\\\"sidebar\\\">\\n  <sg-insert>4.2</sg-insert>\\n  <sg-insert>4.3</sg-insert>\\n</nav>\\nStyleguide 4.1\\n*/\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token selector\"\n  }, \".sidebar\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n...\"))), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/varya/varya.github.com/blob/af38b1fb0bd6e5a1b043d002ad5dbf107f17e6c1/desktop.blocks/sidebar/sidebar.css\"\n  }, \"github/varya/varya.github.com/desktop-blocks/sidebar/sidebar.css\")), mdx(\"p\", null, \"This makes the markup examples pretty short, however it expands for rendering the component and showing the\\nmarkup on the website: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/4.1\"\n  }, \"varya.me/styleguide/#/section/4.1\")), mdx(\"h2\", {\n    \"id\": \"style-guide-driven-development\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#style-guide-driven-development\",\n    \"aria-label\": \"style guide driven development permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Style-Guide-Driven Development\"), mdx(\"p\", null, \"If you type \\\"logo\\\" in the Style Guide search field, it will find and render all the components where \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"logo\"), \" is found!\\nThe search goes through all the CSS codebase. Similarly you can search for the components using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"<em>\"), \" in their markup.\\nOr \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"font:\"), \" in their CSS.\"), mdx(\"p\", null, \"I personally like that the search source is not only the CSS of components but also their markup examples. During the\\nrefactorings this, for example, makes possible to select all the components containing inputs and look how the changes affect them.\"), mdx(\"p\", null, \"However this is just a small addition to one major benefit I see in using the Style Guide. I find it far more important\\nthat \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"it reveals my mistakes\"), \".\"), mdx(\"p\", null, \"I already used the component way when building my blog. And I was pretty sure that my BEM experience is a 100%\\nguarantee that I get this right. But even developing with a highly modular approach in mind, I did this from the page perspective.\\nBefore the components were integrated into the blog engine, I had developed a static page and this was where the\\ncomponents fitted first.\"), mdx(\"p\", null, \"I considered them independent and so tried to write my code. But \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"sitting at the same page they never actually were\\nindependent\"), \".\"), mdx(\"p\", null, \"After the SC5 Style Guide magically represented each of them separately, I can see that the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/1.1\"\n  }, \"logo\"), \" is aligned to the right.\\nAnd why should it be? Obviously, my mistake when I tried to made it fit into the Header.\"), mdx(\"p\", null, \"The same goes for the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/1.4\"\n  }, \"language switcher\"), \" positioned on the right.\"), mdx(\"p\", null, \"In the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/styleguide/#/section/1.5\"\n  }, \"set of social icons\"), \", the language switcher provided with the RSS\\nicon was considered to stay with it. But this only happens because at the blog pages\\nit is placed into a narrow container. The Style Guide represents it on its own and I can see that it is not that\\nflawless as I thought.\"), mdx(\"p\", null, \"Such discoveries obviously lead to the refactoring :-)\"), mdx(\"p\", null, \"To top it off, I must say that the experiment does not end and there are already findings for further\\nposts. Stay tuned!\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I've been presenting  SC5 Style Guide  several times during this year sharing my experience of using it for one\nof the SC5's clients, Elisa. Assuming that Elisa is a huge mobile operator with a lot of websites and a need\nto keep those websites visually consistent, there is no wonder that the SC5 Style Guide as a tool provides benefits\nthere. But what about smaller websites? Would it be useful there? I did not know the answer to this question\nand wanted to experiment. The experiment was conducted on my blog codebase. This is how the Living Style Guide looks like:  varya.me/styleguide . You can…","fields":{"slug":"en/posts/sc5-styleguide-for-smallers/","readingTime":{"minutes":8.505}},"frontmatter":{"title":"Style-guide the smaller things","link":null,"date":"30 July 2015","cover":null}}},{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Automating Style-Guide-Driven Development\",\n  \"date\": \"2015-03-05T00:00:00.000Z\",\n  \"description\": \"This article at SmashingMagazine was published on 5th March 2105. It explained the motivation and benefits of style-guide-driven development and component-based approach in frontend.\\n\",\n  \"canonical\": \"http://www.smashingmagazine.com/2015/03/05/automating-style-guide-driven-development/\"\n};\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\nvar Text = makeShortcode(\"Text\");\nvar Link = makeShortcode(\"Link\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"This article at SmashingMagazine was published on 5th March 2015. It explained the motivation and benefits\\nof style-guide-driven development and component-based approach in frontend.\")), mdx(Text, {\n    size: \"large\",\n    margin: {\n      vertical: \"medium\"\n    },\n    mdxType: \"Text\"\n  }, \"Read at \", mdx(Link, {\n    to: \"http://www.smashingmagazine.com/2015/03/05/automating-style-guide-driven-development/\",\n    mdxType: \"Link\"\n  }, \"Smashing Magazine\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"This article at SmashingMagazine was published on 5th March 2015. It explained the motivation and benefits\nof style-guide-driven development and component-based approach in frontend.","fields":{"slug":"blog/bem-faq/","readingTime":{"minutes":0.365}},"frontmatter":{"title":"Automating Style-Guide-Driven Development","link":null,"date":"05 March 2015","cover":null}}},{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"JSCS in use\",\n  \"date\": \"2015-02-11T00:00:00.000Z\",\n  \"v2\": true,\n  \"layout\": \"post\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"This time I would like to share my experience of keeping a codestyle in one of my working projects. This is about a new\\ntool called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSCS\"), \" which we have recently chosen with the team and now are very pleased with the result.\")), mdx(\"p\", null, \"Once I joined \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://styleguide.sc5.io/\"\n  }, \"SC5 Styleguide\"), \" project, I discovered that it was not consistent enough from\\nits codestyle perspective. It was not frightening by that time, but it was already clear that the project was going to\\ngrow fast and the sooner we start bothering about keeping the codestyle the better. I was already aware about JSCS and\\nits features because had published \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://frontendbabel.info/articles/jscs-javascript-code-style/\"\n  }, \"a translation of author's tool\\nintroduction\"), \" in one of my side-projects. So the\\ndecision which tool to use was made quickly.\"), mdx(\"p\", null, \"There are indeed many other solutions, such as JSLint and JSHint, the most mentioned once. But let me first tell you a\\nstory.\"), mdx(\"p\", null, \"Interesting enough that JSHint authors liked JSCS so much that they prefered to contribute into it rather than develop\\nstyle checkings in their tool. So they removed all the style enforcement rules out of JSHint and keep it now for\\nmore complex things not about coding style but about programming patterns.\"), mdx(\"blockquote\", {\n    className: \"twitter-tweet\",\n    lang: \"en\"\n  }, mdx(\"p\", null, \"And with that, JSCS now has all the style enforcement rules that are being dropped in \", mdx(\"a\", {\n    href: \"https://twitter.com/JSHint\"\n  }, \"@JSHint\"), \" 3.0: \", mdx(\"a\", {\n    href: \"https://t.co/W98EMSiTN5\"\n  }, \"https://t.co/W98EMSiTN5\"), \" cc \", mdx(\"a\", {\n    href: \"https://twitter.com/valueof\"\n  }, \"@valueof\")), \"\\u2014 Mike Sherov (@mikesherov) \", mdx(\"a\", {\n    href: \"https://twitter.com/mikesherov/status/419596672520318976\"\n  }, \"4 Jan 2014\")), mdx(\"script\", {\n    async: true,\n    src: \"//platform.twitter.com/widgets.js\",\n    charSet: \"utf-8\"\n  }), mdx(\"p\", null, \"This means that there is no question if you choose JSLint, JSHint \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"or\"), \" JSCS. Currently you can choose between\\nJSLint and JSHint + JSCS working together.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-js\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"gulp\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token function\"\n  }, \"task\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"jslint\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"jshint\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"jscs\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \";\")))), mdx(\"p\", null, \"Assuming that JSCS is a new tool with not yet spoiled structure, I suppose that it would be a pleasure to contribute\\ninto it. Also, the tool's youth promises that future possible bugs would be fixed soon as there is no legacy.\"), mdx(\"p\", null, \"Moreover, I personally find encouraging that JSCS has been already chosen by such respectable teams as jQuery, Bootsrap\\nand AngularJS.\"), mdx(\"p\", null, \"Long story short, JSCS is an npm package. You can install it either globally or locally for a particular project:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"npm install jscs\"))), mdx(\"p\", null, \"Besides, you will need a configuration file \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \".jscsrc\"), \" and define what kind of JavaScript style you prefer for the\\nproject. This file should be put into the root of your project.\"), mdx(\"p\", null, \"JSCS support tonns of rules. Nethertheless, your config file would not be too heavy thanks to presets. In most cases we\\nchoose from popular JavaScript styles and so there is no need to define the rules over and over again. You only need to\\nwrite who you prefer to look like:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"airbnb\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"crockford\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"google\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"jquery\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mdcs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"wikimedia\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"yandex\")), mdx(\"p\", null, \"Even if you want to be special, you still can choose the most similar preset and redefine some of its rules below.\"), mdx(\"p\", null, \"Important thing is that JSCS is already quite a mature thing, which means that you can easily find acompanying packages\\nand needed plug-ins for editors.\"), mdx(\"h2\", {\n    \"id\": \"the-success-story\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#the-success-story\",\n    \"aria-label\": \"the success story permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"The Success Story\"), mdx(\"p\", null, \"Assuming these facts, we decided to give JSCS a try. We started with defining a lovely configuration but excluded all\\nthe files from the checking process yet. Our project already had modular structure, so this was easy.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"{\\n    ...\\n\\n    \\\"excludeFiles\\\": [\\n      \\\"node_modules/**\\\",\\n      \\\"src/modules/a/**\\\",\\n      \\\"src/modules/b/**\\\",\\n      \\\"src/*.js\\n    ]\\n}\"))), mdx(\"p\", null, \"Then, we agreed that if any of us starts coding or changing a module, he/she will fix the codestyle and swipe out the\\nfixed module from the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"excludeFiles\"), \" list. Following this, we got our files fixed quite fast and even avoid conflicts.\"), mdx(\"p\", null, \"Keeping the codestyle when maintaining these files lately turned out to be more challengeable. Automatic checkings are\\nvery helpful here, but we needed to decide how strict we should be. The codestyle should not be our main goal instead of\\ndevelopment.\"), mdx(\"p\", null, \"Finally we came up with \\\"separation of concerns\\\" model. Thus, for the upstream repository we have strict codestyle\\npolicy, and for the forks it is more suggestive. We taught Travis to check codestyle in the pull requests we are\\ngetting. If codestyle is broken, the Travis build fails. So, pull requests with wrong codestyle cannot be merged into\\nthe upstream. This ensures us that we will never get bad code there. However for the forks it is not that strict. We\\nturned down the idea of using pre-push hooks but recommend a developer to install a pre-commit hook in their repository\\nclone as well as using JSCS IDE plugins in order to learn about wrong codestyle while developing and not when their pull\\nrequest gets broken. These recommendations are described in our documentation for developers and all the team members\\nfollow them.\"), mdx(\"p\", null, \"Everyone especially likes that JSCS can work with the code editors. The codestyle configuration is stored in the project\\nrepository and so an editor reads on its own. The most wonderful thing is that when switching between the projects with\\ndifferent codestyles, it does not require any change of settings.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"http://varya.me/jscs-talk/pictures/sublime.gif\",\n    \"alt\": null\n  })), mdx(\"p\", null, \"And of course it is always possible to check the codestyle manually running a gulp task.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"http://varya.me/jscs-talk/pictures/travis.png\",\n    \"alt\": null\n  })), mdx(\"h2\", {\n    \"id\": \"word-of-caution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#word-of-caution\",\n    \"aria-label\": \"word of caution permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Word of caution\"), mdx(\"p\", null, \"We faced a couple of problems when applying the tool. I believe they are worth to be mentioned, especially as I can\\nprovide the solutions.\"), mdx(\"p\", null, \"The most painful was \\\"out of memory\\\" error when running a gulp task with JSCS checking. Turned out, that excluding files\\nin the configuration is not enough. Gulp tries to process all the files that match the mask and is soon run out of\\nmemory. We fixed this with using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"gulp-ingnore\"), \" package:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"gulp.task('jscs', function() {\\n  return gulp.src([\\n    '**/*.js'\\n  ])\\n  .pipe(gulpIgnore.exclude([\\n    'node_modules/**',\\n    'demo-output/**'\\n  ]))\\n  .pipe(jscs());\\n})\"))), mdx(\"p\", null, \"This is not the best solution because we need to list the excluded files in both \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \".jscs\"), \" configuration and the\\n\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"gulpfile.js\"), \". But there is nothing better yet.\"), mdx(\"p\", null, \"The second trick is about checking the codestyle while watching the project files with Gulp. You would probably like to\\nsee the errors reported in your terminal but still have the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"watch\"), \" task running. This is possible with the help of\\n\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"gulp-plumber\"), \":\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"gulp.task('jscs', function() {\\n  return gulp.src([\\n    '**/*.js'\\n  ])\\n  ...\\n  .pipe(plumber())\\n  .pipe(jscs());\\n});\"))), mdx(\"p\", null, \"This is all, we did not face any other problem with the tool. It works just fine and has already saved thousands of\\nman-hours.\"), mdx(\"h2\", {\n    \"id\": \"besides\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#besides\",\n    \"aria-label\": \"besides permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Besides\"), mdx(\"p\", null, \"If you are interested in the slides for this talk, here they are\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/jscs-talk/\"\n  }, \"http://varya.me/jscs-talk/\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"This time I would like to share my experience of keeping a codestyle in one of my working projects. This is about a new\ntool called  JSCS  which we have recently chosen with the team and now are very pleased with the result. Once I joined  SC5 Styleguide  project, I discovered that it was not consistent enough from\nits codestyle perspective. It was not frightening by that time, but it was already clear that the project was going to\ngrow fast and the sooner we start bothering about keeping the codestyle the better. I was already aware about JSCS and\nits features because had published  a…","fields":{"slug":"en/posts/jscs-in-use/","readingTime":{"minutes":5.385}},"frontmatter":{"title":"JSCS in use","link":null,"date":"11 February 2015","cover":null}}},{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Run on time (about Mac applications)\",\n  \"date\": \"2014-09-12T00:00:00.000Z\",\n  \"v2\": true,\n  \"layout\": \"post\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"I use the same laptop for both work and personal needs. This is useful but makes me see to keeping my\\nwork-life balance. I do this simply \\u2014 turn off all the applications running when I finish my working day\\nin the evening. The only issue is not to forget to open them again next day. But this process can be automatized. :-)\")), mdx(\"p\", null, \"The most important is to run the applications which are in use by the other team members. For example, I a Jabber app\\nhas to be running since the workday has started. The same goes for any other messenger.\"), mdx(\"p\", null, \"We here at AppGyver use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.flowdock.com\"\n  }, \"Flowdock\"), \"\\nfor team communication. So I needed to be sure that it is open every morning.\"), mdx(\"p\", null, \"It turned out that this is doable on Mac with the native Calendar application. Let me show you how exactly.\"), mdx(\"h3\", {\n    \"id\": \"create-a-new-event-in-the-calendar\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#create-a-new-event-in-the-calendar\",\n    \"aria-label\": \"create a new event in the calendar permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Create a new event in the Calendar\"), mdx(\"p\", null, \"I named mine \\\"Run Flowdock\\\". Do not bother about the laptop being opened by the event time your are setting up. The\\napplication can run in advance. My event has \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"9:35\"), \" time.\"), mdx(\"h3\", {\n    \"id\": \"make-your-event-repeated\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#make-your-event-repeated\",\n    \"aria-label\": \"make your event repeated permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Make your event repeated\"), mdx(\"p\", null, \"This event should be repeated every week at the workdays.\"), mdx(\"h3\", {\n    \"id\": \"run-the-application\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#run-the-application\",\n    \"aria-label\": \"run the application permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Run the application\"), mdx(\"p\", null, \"Now the most interesting thing. You can run any application using custom event alerts.\"), mdx(\"p\", null, \"Choose the last item in the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"alert\"), \" select, which is \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Custom\"), \".\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/4802/14441195.32/0_88921_7d53950e_L.png\",\n    \"width\": 300,\n    \"height\": 500,\n    \"border\": 0,\n    \"title\": \"\",\n    \"alt\": \"\"\n  }), mdx(\"p\", null, \"Once the next dialog is opened, choose \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Open file\"), \".\"), mdx(\"undefined\", null, mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/4813/14441195.32/0_88925_47986a79_M.png\",\n    \"width\": 300,\n    \"height\": 167,\n    \"border\": 0,\n    \"title\": \"\",\n    \"alt\": \"\"\n  }), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/5109/14441195.32/0_88924_ea39983e_M.png\",\n    \"width\": 300,\n    \"height\": 162,\n    \"border\": 0,\n    \"title\": \"\",\n    \"alt\": \"\"\n  })), mdx(\"p\", null, \"By \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"file\"), \" they mean an applicaiton to be run. It is defined to be \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Calendar\"), \" by default but you can\\nchoose another one.\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/4810/14441195.32/0_88922_22d155c7_M.png\",\n    \"width\": 300,\n    \"height\": 193,\n    \"border\": 0,\n    \"title\": \"\",\n    \"alt\": \"\"\n  }), mdx(\"p\", null, \"Then, select the application needed in the Finder dialog. In my case it is Flowdock.\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/4809/14441195.32/0_88923_7597bf28_M.png\",\n    \"width\": 300,\n    \"height\": 196,\n    \"border\": 0,\n    \"title\": \"\",\n    \"alt\": \"\"\n  }), mdx(\"p\", null, \"Then, fix the time. 5 minutes before 9:35 is exactly half past nine. Let me remin you, this does not mean that\\nyou need to be at work by this time and have your laptop opened. You can be riding a bus or even sleeping. The\\napplication will run later, when you open your computer.\"), mdx(\"h3\", {\n    \"id\": \"drawback\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#drawback\",\n    \"aria-label\": \"drawback permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Drawback\"), mdx(\"p\", null, \"Not ideal, indeed. If your calendar is synchronized with iPhone, it peeps by this time. The phone cannot run the\\napplication, so it reminds you about the event with sound. But as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://varya.me/ru/posts/run-app-in-time-on-mac/#comment-1582219469\"\n  }, \"one of my friends\\nsuggests\"), \" the workaround can be to create a\\nseparate calendar for such event and not to synchronize it with other devices.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I use the same laptop for both work and personal needs. This is useful but makes me see to keeping my\nwork-life balance. I do this simply — turn off all the applications running when I finish my working day\nin the evening. The only issue is not to forget to open them again next day. But this process can be automatized. :-) The most important is to run the applications which are in use by the other team members. For example, I a Jabber app\nhas to be running since the workday has started. The same goes for any other messenger. We here at AppGyver use  Flowdock \nfor team communication. So I…","fields":{"slug":"en/posts/run-app-in-time-on-mac/","readingTime":{"minutes":2.23}},"frontmatter":{"title":"Run on time (about Mac applications)","link":null,"date":"12 September 2014","cover":null}}},{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"The so different frontend community and how we deal with it\",\n  \"date\": \"2014-06-30T00:00:00.000Z\",\n  \"v2\": true,\n  \"layout\": \"post\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"Long time ago I could read and learn about web development in Russian only. Later, having completed an English language course, I began to read articles and blogs in English more and more. The same went for conferences: I visited\\nRussian-speaking conferences at first and later switched to English-speaking conferences in Europe. In both articles and conference talks, I noticed how the content was different depending on the language used. Sometime I even thought that the communities evolve in different ways and follow different directions.\")), mdx(\"p\", null, \"My Russian-speaking colleagues indeed know the \\\"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://vitaly.harisov.name/article/independent-blocks.html\"\n  }, \"HTML/CSS markup with independent blocks\"), \"\\\"\\narticle by Vitaly Harisov. He published\\nthis in 2008 and outlined the main principles of HTML/CSS development which is known as BEM nowadays. We can say\\nthat was the moment BEM started being used in Russia and neighbouring countries. As for English-speaking developers, they\\nlearned about BEM only in 2012 from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://www.smashingmagazine.com/2012/04/16/a-new-front-end-methodology-bem/\"\n  }, \"my article in\\nSmashingMagazine\"), \". Then, as you might\\nknow, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://csswizardry.com/about/\"\n  }, \"Harry Roberts\"), \" caught sight\\nof that and thanks to his publications BEM became known to the rest of the world.\"), mdx(\"p\", null, \"Thus, 4 years passed since the technology was released until a typical English-speaking web developer got a chance to learn about it. This could have been enough time for a technology to mature and slowly die.\"), mdx(\"p\", null, \"No doubt, a better option would be to make it available back in 2008. I suppose that modular trend on the web would have started earlier and we would have got the results faster. Today we\\nwould use Web Components (they implement some component ideas of BEM) everywhere (and for a long time, already).\"), mdx(\"p\", null, \"With all this in mind, I decided to dedicate some of my free time to publish translations on my blog.\\nSo the translated articles on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/en/issues/ym-modular-system\"\n  }, \"Ymaps modules\"), \" and\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/en/issues/beml-html-preprocessor\"\n  }, \"BEML\"), \" were published. I also had more articles in the queue for translation. Reading\\na lot of developer blogs in Russian, I realized that a lot of interesting content is still being produced. \\\"Is this for Russia only?\\\" I asked myself.\"), mdx(\"p\", null, \"Imagine all these new approaches, libraries, and frameworks that exist today all over the world!.. but you will never\\nlearn them because their authors publish in Arabic, Spanish, Japanese or other languages you do not speak.\"), mdx(\"p\", null, \"Nevertheless, we frontend developers have a wonderful community. Open source culture\\nand technologies like GitHub enable us to help each other and get better results together. To contribute, one does not have to be an expert. For example, many products get their documentation improved just with the help of people who like the project.\"), mdx(\"p\", null, \"This encouraged me to create a collaboration web site for translating frontend articles from local languages into English.\"), mdx(\"p\", null, \"The project is called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Frontend Babel\"), \" and here is the URL: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://frontendbabel.info\"\n  }, \"http://frontendbabel.info\"), \".\\nTechnically, it is a statically generated blog (thanks to DocPad). Any person can take it and run a local copy, then add\\na translated article and submit a pull request into the original source.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://frontendbabel.info/about/\"\n  }, \"About the project\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frontendbabel/frontendbabel.github.com\"\n  }, \"Repository on GitHub\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://frontendbabel.info/how-to-contribute\"\n  }, \"How to contribute\"))), mdx(\"p\", null, \"The first couple of articles were already translated by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.google.com/+MaxShirshin\"\n  }, \"Max Shirshin\"), \". These are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an interesting \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://frontendbabel.info/articles/webpage-rendering-101\"\n  }, \"post about web page rendering by Alexander\\nSkutin\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"an awesome \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://frontendbabel.info/articles/graphical-interface\"\n  }, \"article about graphical interface by Danil\\nKovchy\"))), mdx(\"p\", null, \"You can already share these links with your English-speaking colleagues :-)\"), mdx(\"p\", null, \"Max and I have plans to translate more during the next weeks. I encourage all of you who knows Arabic, Japanese, Polish, French, Spanish (and any other language) to join the project and help us translate. English-speaking developers can do proofreading.\"), mdx(\"p\", null, \"Translating into a foreign language is hard work indeed, but with the help of English-speaking people in our community, we will get the texts improved. So, if you were thinking about writing in English, this may be a good chance to start and learn.\", mdx(\"br\", null)), mdx(\"p\", null, \"Interesting articles will attract visitors. With this, both an author and a translator get more attention on the web and establish new proffesional contacts throught their websites and social networks.\"), mdx(\"p\", null, \"Always remember: a contribution to an open source project can be small, but it is always appreciated! Here are just\\nsome ideas on what you can do:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frontendbabel/frontendbabel.github.com/issues/new\"\n  }, \"Add new source articles into our task\\nqueue\"), mdx(\"br\", null), \"\\nIf you know an interesting article worth to be published, create an issue about it. So another\\ncontributer can grab this task and translate it.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://frontendbabel.info/how-to-contribute#push-new-translation\"\n  }, \"Push new translations\"), mdx(\"br\", null), \"\\nFind a nice article in a language you know, translate it into English and publish on this website.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Tell friends about the project\"), mdx(\"br\", null), \"\\nMentioning this project in social networks and your blog posts you can involve people from\\nall over the world!\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Fix English in the texts\", mdx(\"br\", null), \"\\nIf you spot a grammatical error, you can edit an article (there is a link to an editor below) and submit\\na pull request.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Propose site changes\", mdx(\"br\", null), \"\\nSuggest what can be improved on this web site by adding your ideas to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frontendbabel/frontendbabel.github.com/issues?labels=%40+Translation&state=open\"\n  }, \"the list of\\nissues\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/frontendbabel/frontendbabel.github.com/issues?labels=&page=1&state=open\"\n  }, \"Grab an issue to do\"), mdx(\"br\", null))), mdx(\"p\", null, \"Your contributions will help improve this project a lot!\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Long time ago I could read and learn about web development in Russian only. Later, having completed an English language course, I began to read articles and blogs in English more and more. The same went for conferences: I visited\nRussian-speaking conferences at first and later switched to English-speaking conferences in Europe. In both articles and conference talks, I noticed how the content was different depending on the language used. Sometime I even thought that the communities evolve in different ways and follow different directions. My Russian-speaking colleagues indeed know the \" HTML…","fields":{"slug":"en/posts/frontend-babel-alpha/","readingTime":{"minutes":4.295}},"frontmatter":{"title":"The so different frontend community and how we deal with it","link":null,"date":"30 June 2014","cover":null}}},{"node":{"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Using side drawers in mobile apps on Steroids.js\",\n  \"date\": \"2014-06-09T00:00:00.000Z\",\n  \"v2\": true,\n  \"layout\": \"post\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"div\", {\n    \"data-excerpt\": true\n  }, mdx(\"p\", null, \"As a mobile apps user you may be already familiar to drawers.\\nThey are quite popular solution for a side menu. Using \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"Steroids\"), \"\\nHTML5/JavaScript framework for hybrid mobile applications, you\\ncan bring such an interface solution into your product very easy.\")), mdx(\"p\", null, \"The usage of drawers explained here is demonstrated in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink\"\n  }, \"Steroids\\nKitchensink\"), \" open source application.\\nThis is now being developed set of most useful examples for Steroids.\\nAs the application is constantly changing, I will freeze the code examples\\nat \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/tree/ceacb0ea80799b1d81454e2e966b553b807fbadc\"\n  }, \"28 May 2014\"), \".\"), mdx(\"p\", null, \"To explore the application in your mobile device or in a\\nsimulator clone the repository and run the project. You may need some information\\nabout how to start Steroids projects. That can be learned from tutorials:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://academy.appgyver.com/categories/1-setup-and-getting-started/contents/1-installing-steroids\"\n  }, \"Installing\\nSteroids\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://academy.appgyver.com/categories/1-setup-and-getting-started/contents/2-hello-world\"\n  }, \"Hello World application\"))), mdx(\"p\", null, \"Or from my recent article about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/en/posts/html5-mobile-app-width-native-ui/\"\n  }, \"HTML5 mobile apps with native UI on\\nSteroids\"), \".\"), mdx(\"p\", null, \"Once run the project you will see a page with a list of examples\\nand a navigation bar.\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/9652/14441195.32/0_8477d_3b6d66a5_L.png\",\n    \"width\": 282,\n    \"height\": 500,\n    \"border\": 0\n  }), mdx(\"p\", null, \"The button to teh left of a menu bar opens a side menu. But before we start to\\nstudy side drawers let's look at how this button is shown.\"), mdx(\"p\", null, \"The initial view is coded in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/views/example/index.html\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/views/example/index.html\")), \".\\nThis is an angular view with directives for the list and for the navigation bar.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"html\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-html\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"div\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"ng-controller\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"IndexCtrl\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"navigation-bar\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"title\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"Steroids Kitchensink\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"<\"), \"left-button\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"icon\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"/vendor/icons8/menu-32\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-name\"\n  }, \"onTap\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token attr-value\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation attr-equals\"\n  }, \"=\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\"), \"showMenu()\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\"\")), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"left-button\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"navigation-bar\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\")), \"\\n  ...\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token tag\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"</\"), \"div\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \">\"))))), mdx(\"p\", null, \"The \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"navigation-bar\"), \" directive is custom and described in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/directives/navigationBar.coffee\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/directives/navigationBar.coffee\")), \".\\nUsing such a directive rather than \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"steroids.view.navigationBar\"), \" helpers at every page is\\nmore useful for the applications with many views.\"), mdx(\"p\", null, \"Indeed inside the directive the same helpers are used. But declaring navigation bar\\ntitle and buttons in the view makes our programmers lifes a little bit\\neasier.\"), mdx(\"p\", null, \"Here the navigation bar titled \\\"Steroids Kitchensink\\\" contains a \\\"hamburger\\\"\\nmenu button which responds to the tapping with calling \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"showMenu\"), \" methods of\\nthe corresponding controller.\"), mdx(\"p\", null, \"This controller is coded in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/controllers/example.coffee\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/controllers/example.coffee\")), \".\\nAs you can see, the \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"showMenu\"), \" method is pretty short.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"coffee\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-coffee\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-coffee\"\n  }, \"$scope\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"showMenu \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"-\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \">\"), \"\\n  steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"drawers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"show \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"edge\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"screen\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"edges\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token constant\"\n  }, \"LEFT\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"It uses the drawers \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"show\"), \" method and slide the initial view to\\nthe right which uncovers the menu view.\"), mdx(\"p\", null, \"Of course, the code needs to know what is the view we mean by 'left'.\\nWe have to provide it with such a knowledge declaring the list of drawers\\nin the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/config/application.coffee#L39\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"config/application.coffee\")), \"\\nconfiguration file.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"coffee\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-coffee\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-coffee\"\n  }, \"steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"config\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"drawers \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"left\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"id\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"sidemenu\\\"\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"location\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"http://localhost/views/sidemenu/index.html\\\"\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"showOnAppLoad\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"false\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"widthOfDrawerInPixels\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"250\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"options\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"centerViewInteractionMode\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"Full\\\"\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"closeGestures\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"PanNavBar\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"PanCenterView\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"TapCenterView\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"openGestures\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"PanNavBar\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"PanCenterView\\\"\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"showShadow\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"true\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"stretchDrawer\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"true\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"widthOfLayerInPixels\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token number\"\n  }, \"0\")))), mdx(\"p\", null, \"Here the menu view file and some parameters. You can learn about\\nwhat they mean from a special tutorial about \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://academy.appgyver.com/categories/3-user-interface-and-design/contents/98-configuring-drawers-on-app-load\"\n  }, \"configuring drawers\"), \".\"), mdx(\"p\", null, \"This will make the sidemenu shown.\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/9766/14441195.32/0_8477e_dbe7889e_L.png\",\n    \"width\": 282,\n    \"height\": 500,\n    \"border\": 0\n  }), mdx(\"p\", null, \"To make it look like in the picture you need to provide a\\ncorresponding view with the list of menu items. Here it is defined\\nin \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/views/sidemenu/index.html\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/views/sidemenu/index.html\")), \".\\nThis is pretty similar to the list of examples in the initial view. To make it function\\nwe provide:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a list of items and the corresponding view in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/www/data/sidemenu.json\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"www/data/sidemenu.json\")), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data model in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/models/sidemenu.js\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/models/sidemenu.js\")), \";\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"controller in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/controllers/sidemenu.coffee\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"app/controllers/sidemenu.coffee\")), \".\")), mdx(\"p\", null, \"From the drawers perspective the most important piece of code\\nto study is the controller. It says to hide the opened drawer if you\\ntap the currently active menu item. Opening other menu items goes\\ndifferently; it replaces the current central view with some animation.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"coffee\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-coffee\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-coffee\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" item\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"active\\n  steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"drawers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"hide \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"else\"), \"\\n  webView \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token class-name\"\n  }, \"steroids\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"views\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"WebView\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"id\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" item\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"id\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"location\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" item\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"url\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n  steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"drawers\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"hide \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"center\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" webView\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\")))), mdx(\"p\", null, \"Hiding the currently opened drawer with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"steroids.drawers.hide\"), \" simply\\ngets back the previously shown central view.\"), mdx(\"p\", null, \"If you want to show a different page, you would also use \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"steroids.drawers.hide\"), \" but\\nwith an additional \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"center\"), \" parameter to pass the needed view. This view has to be\\ncreated in advance with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"steroids.views.WebView\"), \".\"), mdx(\"p\", null, \"Besides, such a view must be configured as preloaded in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/config/application.coffee#L31\"\n  }, mdx(\"code\", {\n    parentName: \"a\",\n    \"className\": \"language-text\"\n  }, \"config/application.coffee\")), \".\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"coffee\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-coffee\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-coffee\"\n  }, \"steroids\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"config\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \".\"), \"preloads \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"id\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"settings\\\"\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token property\"\n  }, \"location\"), mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token operator\"\n  }, \":\"), \" \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token string\"\n  }, \"\\\"http://localhost/views/settings/index.html\\\"\"), \"\\n  \", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token punctuation\"\n  }, \"]\")))), mdx(\"p\", null, \"Thus, with tapping on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Settings\"), \" menu item you will get the settings\\npage shown.\"), mdx(\"img\", {\n    \"className\": \"article__image\",\n    \"src\": \"http://img-fotki.yandex.ru/get/9667/14441195.32/0_8477f_2aafe347_L.png\",\n    \"width\": 282,\n    \"height\": 500,\n    \"border\": 0\n  }), mdx(\"p\", null, \"This page is empty yet. The upcoming posts will fill it in with something\\ninteresting. Stay tuned :-)\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"As a mobile apps user you may be already familiar to drawers.\nThey are quite popular solution for a side menu. Using  Steroids \nHTML5/JavaScript framework for hybrid mobile applications, you\ncan bring such an interface solution into your product very easy. The usage of drawers explained here is demonstrated in the  Steroids\nKitchensink  open source application.\nThis is now being developed set of most useful examples for Steroids.\nAs the application is constantly changing, I will freeze the code examples\nat  28 May 2014 . To explore the application in your mobile device or in a\nsimulator clone…","fields":{"slug":"en/posts/steroids-drawers/","readingTime":{"minutes":3.58}},"frontmatter":{"title":"Using side drawers in mobile apps on Steroids.js","link":null,"date":"09 June 2014","cover":null}}}]}},"pageContext":{"limit":6,"skip":30,"pageCount":9,"currentPage":6}},"staticQueryHashes":[]}