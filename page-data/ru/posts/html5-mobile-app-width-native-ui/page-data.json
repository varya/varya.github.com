{"componentChunkName":"component---src-templates-post-js","path":"/ru/posts/html5-mobile-app-width-native-ui/","result":{"data":{"mdx":{"id":"744dac7e-f0d5-5181-9597-6404669923a1","body":"\nНедавно я побывала на конференции [Front Trends 2014](http://2014.front-trends.com/)\nв Варшаве. Конференция очень крутая, обязательно посетите её в следующем году.\nУ них всегда интересная основная программа, и кроме неё есть ещё\nмини-доклады от всех желающих. В этом году одним из таких докладов был мой,\nо фреймворке и инструментах для разработки HTML5/JavaScript мобильных\nприложений [Steroids](http://www.appgyver.com/steroids).\nЕсли вы не были на конференции, то можете прочесть мою презентацию в тексте.\n<excerpt/>\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#Cover\">\n  </iframe>\n</div>\n\nЯ совсем новичок в разработке мобильных приложений, но всё равно решилась\nпоказать, как пользоваться Steroids, потому что благодаря ему я смогла сделать\nприложение с системным интерфейсом (native UI) и безболезненно пройти через\nвесь цикл разработки за считанные минуты.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#summary\">\n  </iframe>\n</div>\n\nИнструменты Steroids — это пакет с command line интерфейсом. Вместе с ним вы получите\nJavaScript-фреймворк Steroids. А также инструменты обеспечат вам сборку проекта,\nудобный процесс разработки, отладки и релиза. Всё написано под NodeJS, так что\nпотребуется его установить.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#3\">\n  </iframe>\n</div>\n\nНужна версия `0.10.25`. В инструкции [Installation and Setup\nGuide](http://academy.appgyver.com/categories/1/contents/1)\nподробно написано, как устанавливать.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#4\">\n  </iframe>\n</div>\n\nСамая первая команда, которой вы воспользуетесь, — это `steroids create`.\nЗатем, в получившейся папке проекта наберите `steroids connect --watch` —\nзапустится процесс steroids. Флаг `--watch` нужен, чтобы Steroids отслеживал\nизменения файлов и каждый раз пересобирал проект и обновлял его на подключенных\nустройствах.\n\nВы можете подключить к проекту реальный телефон. После запуска `steroids connect`\nоткроется окно браузера с QR-кодом. Считайте этот QR-код мобильным приложением\n`AppGyver Scanner` — и проект окажется в вашем телефоне (а кроме того — будет\nобновляться).\n\n<div Style=\"text-align:center;\">\n<a href=\"https://itunes.apple.com/us/app/appgyver-scanner/id575076515?mt=8\"\ntarget=\"_blank\"><img alt=\"Appstore\" class=\"appstore_icon\"\nsrc=\"https://share.appgyver.com/assets/appstore-df950585b54bd081a7826913fc715cd4.png\"/></a>\n<a href=\"https://play.google.com/store/apps/details?id=com.appgyver.android&amp;feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5hcHBneXZlci5hbmRyb2lkIl0.\"\ntarget=\"_blank\"><img alt=\"Googleplay\" class=\"appstore_icon\"\nsrc=\"https://share.appgyver.com/assets/googleplay-2cef882d62e402fbdbfe8cdac5794069.png\"/></a>\n</div>\n\nДругой способ — открыть проект в Simulator. Для этого наберите `simulator`\nв окне терминала, где запускали `steroids connect`.\n\nТеперь можете изменить исходный код приложения. Например, напишите\nсвой текст в файле `www/index.html`. После этого можете проверить,\nчто приложение в подключенном телефоне или в симуляторе изменилось.\n\nНаучиться, как сделать более серьезные изменения в проекте, вы\nможете из примеров и туториалов. Запустите `steroids generate`, и\nполучите нужный код.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#5\">\n  </iframe>\n</div>\n\nМожете смотреть, как устроены эти примеры, учиться по\n[туториалам](http://academy.appgyver.com/) и\n[API документации](http://docs.appgyver.com/en/stable/index.html).\nДальше я покажу как использовать в вашем приложении\nнекоторые штатные элементы интерфейса, то есть\nписать на HTML5/JavaScript приложение с _native UI_.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#examples-list\">\n  </iframe>\n</div>\n\nДавайте начнем с табов.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#7\">\n  </iframe>\n</div>\n\nВы можете найти закомментированный пример использования\nтабов в файле `config/application.coffee`. Это список табов\nс их иконками и ссылками, на которые они ведут.\n\nВ моём приложении я создаю 3 таба для следующих страниц:\n\n- index.html\n- notificationExample.html\n- knowledge.html\n\n```coffee\nsteroids.config.tabBar.enabled = true\nsteroids.config.tabBar.tabs = [\n  {\n    title: \"Index\"\n    icon: \"icons/pill@2x.png\"\n    location: \"http://localhost/index.html\"\n  },\n  {\n    title: \"Notifications\"\n    icon: \"icons/bell.png\"\n    location: \"http://localhost/notificationExample.html\"\n  },\n  {\n    title: \"Knowledge base\"\n    icon: \"icons/coding.png\"\n    location: \"http://localhost/knowledge.html\"\n  }\n]\n```\n\nПоложите html-файлы этих страниц в папку `www`. Пока они могут\nбыть пустыми. Также не забудьте об иконках, можете взять из моего\nрепозитория всю папку [icon\nfolder](https://github.com/varya/steroids-fronttrends2014/tree/master/www/icons).\n\nПосле того как все изменения будут сделаны, подождите пересборки и\nубедитесь в результате.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9088/14441195.32/0_84262_ae854cb8_orig.png\" width=\"340\" height=\"89\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nДальше можно поиграть с нотификациями.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#8\">\n  </iframe>\n</div>\n\nРазместите код этих кнопок внутри тега `<body>` на странице\n`www/notificationExample.html`.\n\n```html\n<button class=\"button button-block\" ontouchend=\"showAlert()\">\n  Show alert dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"showConfirm()\">\n  Show confirm dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"showPrompt()\">\n  Show prompt dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"vibrate()\">\n  Vibrate the device\n</button>\n```\n\nКнопки реагируют на прикосновения пользователя и запускают\nразличные JavaScript-функции. Чтобы сделать страницу работающей,\nнужно задать эти функции в `<head>` или `*.js` файле страницы.\nКаждая из них иллюстрирует работу своего вида нотификации, такого\nкак:\na kind of notification which are:\n\n- `navigator.notification.alert`\n- `navigator.notification.confirm`\n- `navigator.notification.prompt`\n- `navigator.notification.vibrate`\n\nКод функций можете взять\n[из моего репозитория](https://github.com/varya/steroids-fronttrends2014/blob/master/www/notificationExample.html#L15).\n\nТеперь вы можете перейти на эту страницу по соответствующему\nтабу и увидеть, как работает каждый тип нотификации.\n\nСледующий системный элемент — кнопка на навигационной панели\n(navigation bar).\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#9\">\n  </iframe>\n</div>\n\nНавигационная панель может быть изменена при помощи JavaScript-хелперов\nфреймворка Steroids. Если вы хотите сделать её одинаковой для всех страниц\nприложения, то разместите код в файле `www/javascripts/application.js`,\nкоторый подключен ко всем `*.html` файлам.\n\n```js\nvar loginButton = new steroids.buttons.NavigationBarButton();\nloginButton.title = \"the Button\";\n\nloginButton.onTap = function () {\n  navigator.notification.alert(\n    \"You tapped the button!\",\n    function () {},\n    \"the Alert\",\n    \"I did!\"\n  );\n};\n\nsteroids.view.navigationBar.update({\n  buttons: {\n    right: [loginButton],\n  },\n});\n```\n\nЭтот код вставит кнопку в правую часть навигационной панели.\nКасание кнопки запустит нотификацию, уже знакомую вам по предыдущему\nпримеру.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9115/14441195.32/0_84264_7f27d435_L.png\" width=\"282\" height=\"500\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nИ последний пример штатного интерфейса в этом приложении\n— модальное окно.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#10\">\n  </iframe>\n</div>\n\nРазместите эту кнопку в файле `www/index.html`:\n\n```html\n<a class=\"button button-block\" ontouchend=\"showModal()\">Open modal</a>\n```\n\nИ определите функцию `showModal`, которая открывает модальное\nокно с соответствующим содержанием.\n\n```js\nfunction showModal() {\n  var webView = new steroids.views.WebView(\"/views/modalExample/show.html\");\n  steroids.modal.show(webView);\n}\n```\n\nЧто показывать в модальном окне, должно быть написано в файле\n`app/views/modalExample/show.html`. Кстати, не забудьте, что там\nдолжна быть кнопка закрывания модального окна. Чтобы всё прошло\nбыстрее, позаимствуйте\n[код из репозитория приложения](https://github.com/varya/steroids-fronttrends2014/blob/master/app/views/modalExample/show.html).\n\nС этими и [другими элементами интерфейса](http://docs.appgyver.com/en/stable/steroids_Steroids%20Native%20UI_index.md.html#Steroids%C2%A0Native%C2%A0UI)\nвы можете сделать приложение с системным интерфейсом, которое\nбудет выглядеть натурально на том устройстве, на котором запускается\nприложение.\n\nКогда приложение закончено (или даже в процессе), вы можете захотеть\nпоказать его другу, клиенту или даже маме.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#sharing\">\n  </iframe>\n</div>\n\nМожно воспользоваться QR-кодом, упоминаемым в начале статьи. Он\nпринесет код с вашего компьютера на любое устройство. Но вы оба должны\nбыть подключены к одной сети.\n\nЕсли вы хотите показать приложение удаленно, разместите код в облаке.\nДля этого есть команда `steroids deploy`. В результате вы тоже получите\nстраницу с QR-кодом. Его можно считать при помощи `AppGyver Scaner` и\nполучить в своём телефоне приложение прямо из облака.\n\nВы можете делиться всеми своими приложениями из облака. А также\nнастраивать их и собирать релизы. Всё это делается через web-интерфейс\n[cloud.appgyver.com](https://cloud.appgyver.com/applications).\n\nОтсюда же приложения можно отправлять в AppStore и GooglePlay.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9062/14441195.32/0_84265_d03d686e_orig.png\" width=\"500\" height=\"327\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nВидите, это просто. Настолько просто, что даже новичок может не только\nразработать приложение, но и сделать об этом презентацию с живым кодом\nна конференции.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\"\n    src=\"http://varya.me/start-with-steroids/?full#links\">\n  </iframe>\n</div>\n\nУзнать больше о Steroids и Cordova (в основе Steroids лежит PhoneGap)\nможно в [AppGyver Academy](http://academy.appgyver.com/). Там есть:\n\n- подробные обучающие материалы,\n- документация,\n- сообщество разработчиков.\n\nИ, конечно, вы можете читать [этот блог](/ru/posts). Я собираюсь\nделиться своими следующими открытиями относительно Steroids в ближайшее время :-)\n","fields":{"slug":"ru/posts/html5-mobile-app-width-native-ui/","disqusIdentifier":"posts-html5-mobile-app-width-native-ui-index-ru","readingTime":{"minutes":5.385}},"frontmatter":{"title":"Мобильное приложение на HTML5 со штатным интерфейсом","subTitle":null,"date":"28 May 2014","v2":true,"old":null,"tumblr":null,"tags":null,"meta":null,"canonical":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"ru/posts/html5-mobile-app-width-native-ui/"}},"staticQueryHashes":[],"slicesMap":{}}