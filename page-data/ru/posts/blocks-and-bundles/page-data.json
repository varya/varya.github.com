{"componentChunkName":"component---src-templates-post-js","path":"/ru/posts/blocks-and-bundles/","result":{"data":{"mdx":{"id":"79c2e6f4-4825-5ea7-82b2-290f9885c7f1","body":"\nНекотрое время назад мой знакомый, который делает проект на полном стеке БЭМ\n(BEM-CSS, i-bem.js и BEMHTML-шаблоны),\nзадал мне несколько вопросов об использовании\n[BEM project\nstub](https://github.com/bem/project-stub/tree/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c).\nОтвечая на вопрос, я пообещала опубликовать ответ в виде текста, потому что\nмногие вещи вокруг БЭМ не проговариваются, считаясь слишком простыми — и\nошибочно!<excerpt/>\n\nВопрос был о конфигурационном файле `.bem/make.js`, который нужен при\nиспользовании\n[bem tools](http://bem.info/tools/bem/bem-tools/)\nдля сборки страниц.\n[Строчки 12 и\n13](https://github.com/bem/project-stub/blob/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c/.bem/make.js#L12)\nописывают регулярные выражения для `blocks` и `bundles`. Не сразу понятно,\nчто это значит.\n\nВообще эти выражения нужны, чтобы распознать папки на файловой системе. Те,\nкоторые заканчиваются на `.blocks` — для блоков, а те, что заканчиваются на\n`.bundles` — для бандлов (страниц). Под эти выражения, например, подходят папки\n`desktop.blocks` и `desktop.bundles` из project-stub.\n\nДля чего нужна папка `desktop.blocks`, должно быть понятно. Поскольку БЭМ —\nмодульный паттерн, необходимо место для хранения модулей, то есть блоков. Каждый\nблок — это директория, содержащая все файлы, нужные для каждого конкретного\nинтерфейсного модуля.\n\nВот, например, [набор блоков одного\nпроекта](https://github.com/varya/online-shop-dummy/tree/master/desktop.blocks).\n\nПапка `desktop.bundles` нуждается в пояснении. Она содержит страницы – результат\nиспользования блоков. Каждая страница помещена в отдельную директорию, внутри\nкоторой располагаются все файлы, нужные для страницы.\nМожно снова посмотреть\n[пример из предыдущего\nпроекта](https://github.com/varya/online-shop-dummy/tree/gh-pages/desktop.bundles).\n\nРазница в том, что файлы блоков созданы разработчиком, а файлы бандлов созданы\nbem tools. Для блоков это знакомые нам CSS, JavaScript и иногда шаблоны.\n\n<pre><code>├── desktop.blocks/\n│   ├── goods/\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.bemhtml\">goods.bemhtml</a>\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.css\">goods.css</a>\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.deps.js\">goods.deps.js</a>\n│   │   └── <a href=\"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.ie.css\">goods.ie.css</a></code></pre>\n\nПроводя параллели для БЭМ (и любого другого модульного паттерна) в реальном\nмире, можно сказать, что блок — это кирпичик.\n\n![](http://img-fotki.yandex.ru/get/6730/14441195.30/0_7e0f8_33c1c86c_L.jpg)\n\nФайлы бандлов — это тоже файлы, нужные для браузера: CSS, JavaScript, HTML. _Ни\nодин из них не написан разработчиком, они созданы bem tools_. Можете посмотреть\nвнутрь файлов и убедиться, что код абсолютно \"роботный\".\n\n<pre><code>├── desktop.bundles/\n│   ├── index/\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/_index.css\">_index.css</a>\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/_index.js\">_index.js</a>\n│   │   ├── <a href=\"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.bemjson.js\">index.bemjson.js</a>\n│   │   └── <a href=\"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.html\">index.html</a></code></pre>\n\nДля понимания bem tools представьте, что это строительный кран. Он берет\nстроительные блоки и возводит из них дом.\n\n![](http://img-fotki.yandex.ru/get/9058/14441195.30/0_7e0f3_ff76f66a_L.jpg)\n\nХотя, кроме _.js, _.css и \\*.html файлов, всё-таки есть один файл, написанный\nразрабочиком.\nЭто\n[index.bemjson.js](https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.bemjson.js)\n— JSON описание того, что за блоки нужны на странице и какова их древовидная\nструктура. Звучит логично, ведь только человек знает, что нужно показать на\nстранице. Всё остальное делают bem tools. Получив информацию о том, какие блоки\nнужны для страницы, они берут их код из `desktop.blocks` и формируют с их\nпомощью страницу.\n\nПродолжая пример со строительством дома, можно сказать что `page.bemjson.js` —\nэто чертеж.\n\n![](http://img-fotki.yandex.ru/get/6704/14441195.30/0_7e1ba_9dacd537_L.jpg)\n\nНо почему же `bem tools` нужно регулярное выражение в настройках?\n\nЭто несложно. Все папки, которыми оперирует `bem tools` — это `уровни переопределения`. Должно быть легче, если представлять уровень как набор\nсущностей. Уровень блоков представлен папкой `desktop.blocks`, а уровень страниц\n— папкой `desktop.pages`. В конфигурационной папке\n[.bem/levels/](https://github.com/bem/project-stub/tree/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c/.bem/levels)\nесть инструкции, по которым bem tools понимают, что делать с уровнями разных\nтипов.\n\nВыделяя в проекте блоки и бандлы, можно делать разные наборы блоков и разные\nбандлы, собранные из этих наборов. Например, блоки для desktop и touch версий\nсайта могут храниться в одном репозитории. И страницы, собранные из таких блоков\n— тоже.\n\n<pre><code>├── desktop.blocks/\n├── desktop.bundles/\n├── touch.blocks/\n└── touch.bundles/</code></pre>\n\nВозвращаясь к примерам из реального мира, не только кирпичики могут быть\nмодулями, но и детальки LEGO.\n\n![](http://img-fotki.yandex.ru/get/6704/14441195.30/0_7e0f6_f69c7d44_L.jpg)\n\nИз них также можно построить дом. Немножечко другой, конечно.\n\n![](http://img-fotki.yandex.ru/get/9326/14441195.30/0_7e0f4_3d999550_L.jpg)\n\nЕсли пойти дальше, вы можете выделить код блоков, общий для всех платформ, и\nхранить его отдельно.\n\n<pre><code>├── common.blocks/\n├── desktop.blocks/\n├── desktop.bundles/\n├── touch.blocks/\n└── touch.bundles/</code></pre>\n\nС такой структурой desktop версия формируется из кода блоков уровней\n`common.blocks` и `desktop.blocks`, а touch версия — из уровней `common.blocks`\nи `touch.blocks`.\n\n![](http://img-fotki.yandex.ru/get/6725/14441195.30/0_7e0f5_3e107fd4_L.jpg)\n\nИ в заключении, я не перестаю радоваться идее проекта\n[BEM project\nstub](https://github.com/bem/project-stub/). Сама постоянно использую его,\nначиная новые проекты. Туториал о\n[старте проекта на полном стеке\nБЭМ](http://ru.bem.info/articles/start-with-project-stub/) показывает, как именно.\nТак же БЭМ использует и знакомый, задавший мне вопрос. Я никогда раньше не\nподозревала, что project stub позволяет начать работы с БЭМ без знания всего\nтого, что описано выше. :-)\n\nКстати, написав все это, я поняла, что описание основ БЭМ для меня несложно и\nзанимает разумное время. При этом (я надеюсь!), это очень полезно для других.\nТак что спрашивайте всё, что вы хотите знать.\n","fields":{"slug":"ru/posts/blocks-and-bundles/","disqusIdentifier":"ru-issues-blocks-and-bundles","readingTime":{"minutes":3.48}},"frontmatter":{"title":"Блоки как кирпичи и бандлы как дома","subTitle":null,"date":"15 January 2014","v2":null,"old":true,"tumblr":null,"tags":null,"meta":null,"canonical":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"ru/posts/blocks-and-bundles/"}},"staticQueryHashes":[],"slicesMap":{}}