{"componentChunkName":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-steroids-drawers-index-en-md","path":"/en/posts/steroids-drawers/","result":{"data":{"mdx":{"id":"ae0614c4-ddaa-577c-bd33-c8d5032cbfff","body":"\n<div data-excerpt>\n\nAs a mobile apps user you may be already familiar to drawers.\nThey are quite popular solution for a side menu. Using `Steroids`\nHTML5/JavaScript framework for hybrid mobile applications, you\ncan bring such an interface solution into your product very easy.\n\n</div>\n\nThe usage of drawers explained here is demonstrated in the [Steroids\nKitchensink](https://github.com/AppGyver/kitchensink) open source application.\nThis is now being developed set of most useful examples for Steroids.\nAs the application is constantly changing, I will freeze the code examples\nat [28 May 2014](https://github.com/AppGyver/kitchensink/tree/ceacb0ea80799b1d81454e2e966b553b807fbadc).\n\nTo explore the application in your mobile device or in a\nsimulator clone the repository and run the project. You may need some information\nabout how to start Steroids projects. That can be learned from tutorials:\n\n- [Installing\n  Steroids](https://academy.appgyver.com/categories/1-setup-and-getting-started/contents/1-installing-steroids)\n- [Hello World application](https://academy.appgyver.com/categories/1-setup-and-getting-started/contents/2-hello-world)\n\nOr from my recent article about [HTML5 mobile apps with native UI on\nSteroids](/en/posts/html5-mobile-app-width-native-ui/).\n\nOnce run the project you will see a page with a list of examples\nand a navigation bar.\n\n<img class=\"article__image\" src=\"http://img-fotki.yandex.ru/get/9652/14441195.32/0_8477d_3b6d66a5_L.png\" width=\"282\" height=\"500\" border=\"0\"/>\n\nThe button to teh left of a menu bar opens a side menu. But before we start to\nstudy side drawers let's look at how this button is shown.\n\nThe initial view is coded in [`app/views/example/index.html`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/views/example/index.html).\nThis is an angular view with directives for the list and for the navigation bar.\n\n```html\n<div ng-controller=\"IndexCtrl\">\n  <navigation-bar title=\"Steroids Kitchensink\">\n    <left-button icon=\"/vendor/icons8/menu-32\" onTap=\"showMenu()\"></left-button>\n  </navigation-bar>\n  ...\n</div>\n```\n\nThe `navigation-bar` directive is custom and described in [`app/directives/navigationBar.coffee`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/directives/navigationBar.coffee).\nUsing such a directive rather than `steroids.view.navigationBar` helpers at every page is\nmore useful for the applications with many views.\n\nIndeed inside the directive the same helpers are used. But declaring navigation bar\ntitle and buttons in the view makes our programmers lifes a little bit\neasier.\n\nHere the navigation bar titled \"Steroids Kitchensink\" contains a \"hamburger\"\nmenu button which responds to the tapping with calling `showMenu` methods of\nthe corresponding controller.\n\nThis controller is coded in [`app/controllers/example.coffee`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/controllers/example.coffee).\nAs you can see, the `showMenu` method is pretty short.\n\n```coffee\n$scope.showMenu = ()->\n  steroids.drawers.show {\n    edge: steroids.screen.edges.LEFT\n  }\n```\n\nIt uses the drawers `show` method and slide the initial view to\nthe right which uncovers the menu view.\n\nOf course, the code needs to know what is the view we mean by 'left'.\nWe have to provide it with such a knowledge declaring the list of drawers\nin the [`config/application.coffee`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/config/application.coffee#L39)\nconfiguration file.\n\n```coffee\nsteroids.config.drawers =\n  left:\n    id: \"sidemenu\"\n    location: \"http://localhost/views/sidemenu/index.html\"\n    showOnAppLoad: false\n    widthOfDrawerInPixels: 250\n  options:\n    centerViewInteractionMode: \"Full\"\n    closeGestures: [\"PanNavBar\", \"PanCenterView\", \"TapCenterView\"]\n    openGestures: [\"PanNavBar\", \"PanCenterView\"]\n    showShadow: true\n    stretchDrawer: true\n    widthOfLayerInPixels: 0\n```\n\nHere the menu view file and some parameters. You can learn about\nwhat they mean from a special tutorial about [configuring drawers](https://academy.appgyver.com/categories/3-user-interface-and-design/contents/98-configuring-drawers-on-app-load).\n\nThis will make the sidemenu shown.\n\n<img class=\"article__image\" src=\"http://img-fotki.yandex.ru/get/9766/14441195.32/0_8477e_dbe7889e_L.png\" width=\"282\" height=\"500\" border=\"0\"/>\n\nTo make it look like in the picture you need to provide a\ncorresponding view with the list of menu items. Here it is defined\nin [`app/views/sidemenu/index.html`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/views/sidemenu/index.html).\nThis is pretty similar to the list of examples in the initial view. To make it function\nwe provide:\n\n- a list of items and the corresponding view in [`www/data/sidemenu.json`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/www/data/sidemenu.json);\n- data model in [`app/models/sidemenu.js`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/models/sidemenu.js);\n- controller in [`app/controllers/sidemenu.coffee`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/app/controllers/sidemenu.coffee).\n\nFrom the drawers perspective the most important piece of code\nto study is the controller. It says to hide the opened drawer if you\ntap the currently active menu item. Opening other menu items goes\ndifferently; it replaces the current central view with some animation.\n\n```coffee\nif item.active\n  steroids.drawers.hide {}\nelse\n  webView = new steroids.views.WebView {\n    id: item.id,\n    location: item.url\n  }\n  steroids.drawers.hide {\n    center: webView\n  }\n```\n\nHiding the currently opened drawer with `steroids.drawers.hide` simply\ngets back the previously shown central view.\n\nIf you want to show a different page, you would also use `steroids.drawers.hide` but\nwith an additional `center` parameter to pass the needed view. This view has to be\ncreated in advance with `steroids.views.WebView`.\n\nBesides, such a view must be configured as preloaded in [`config/application.coffee`](https://github.com/AppGyver/kitchensink/blob/ceacb0ea80799b1d81454e2e966b553b807fbadc/config/application.coffee#L31).\n\n```coffee\nsteroids.config.preloads = [\n  {\n    id: \"settings\"\n    location: \"http://localhost/views/settings/index.html\"\n  }\n]\n```\n\nThus, with tapping on the _Settings_ menu item you will get the settings\npage shown.\n\n<img class=\"article__image\" src=\"http://img-fotki.yandex.ru/get/9667/14441195.32/0_8477f_2aafe347_L.png\" width=\"282\" height=\"500\" border=\"0\"/>\n\nThis page is empty yet. The upcoming posts will fill it in with something\ninteresting. Stay tuned :-)\n","fields":{"slug":"en/posts/steroids-drawers/","disqusIdentifier":"posts-steroids-drawers-index-en","readingTime":{"minutes":3.495}},"frontmatter":{"title":"Using side drawers in mobile apps on Steroids.js","subTitle":null,"date":"09 June 2014","v2":true,"old":null,"tumblr":null,"tags":null,"meta":null,"canonical":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"en/posts/steroids-drawers/","prev":{"id":"1062dc1e-8d13-511e-97d5-132fc46a17d5","fields":{"slug":"en/posts/docpad-with-bem-taste/","disqusIdentifier":"posts-docpad-with-bem-taste-index-en","level":1,"fileRelativePath":"docpad-with-bem-taste/index_en.md","lang":"en","readingTime":{"minutes":4.795}},"frontmatter":{"title":"Docpad with the taste of BEM","subTitle":null,"link":null,"v2":true,"old":null,"date":"2014-06-04T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/docpad-with-bem-taste/index_en.md"}},"next":{"id":"db8b84a2-4139-58f7-afdb-1963de3bdde3","fields":{"slug":"en/posts/frontend-babel-alpha/","disqusIdentifier":"posts-frontend-babel-alpha-index-en","level":1,"fileRelativePath":"frontend-babel-alpha/index_en.md","lang":"en","readingTime":{"minutes":4.195}},"frontmatter":{"title":"The so different frontend community and how we deal with it","subTitle":null,"link":null,"v2":true,"old":null,"date":"2014-06-30T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/frontend-babel-alpha/index_en.md"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/steroids-drawers/index_en.md","frontmatter":{"title":"Using side drawers in mobile apps on Steroids.js","date":"2014-06-09T00:00:00.000Z","v2":true,"layout":"post"}}},"staticQueryHashes":[],"slicesMap":{}}