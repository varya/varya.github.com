{"componentChunkName":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-beml-html-preprocessor-index-en-md","path":"/en/posts/beml-html-preprocessor/","result":{"data":{"mdx":{"id":"875f5f01-23c4-5c43-a973-a61cd4d65c75","body":"\n<div data-excerpt>\n\nDepending on a project people prefer different ways to adapt BEM.\nThis results\ninto a range of tools for our choice. Today, I am translating Maxim Shkalin's\ndescription of the `BEML` templating pre-processor.\n\nWilling to lighten the development with BEM I propose a tiny extension for the\nHTML syntax (yes, I used to writ all those long CSS classes manually). As the\nname `BEMHTML` is greedily taken by the Yandex guys, let us call it `BEML`.\n\n</div>\n\n## Objective\n\n1. Smooth learning curve<br/>\n   HTML-syntax with no need to transform one language into another.\n1. Portability<br/>\n   The tool has to be easy to use with other languages.\n1. Compatiblity with template engines<br/>\n   Instead of trying to replace them.\n1. Simplicity<br/>\n   Easy to use at any project.\n\nIt might be my habit, but I do not see the need to transform JSON into HTML.\nBEMJSON page description usually looks like spaghetti and is very hard to read\ndue to its syntax. Also I do not think that HTML is wrong. AngularJS has already\nshown that HTML can be much flexible than now. Thus, I decided to follow this\nexample.\n\nMoreover, there is anothe problem with using BEMHTML. You need Node.js running\nfor your backend; or use another JavaScript engine for PHP or Rython with dirty\nhacks like V8JS or PyV8. The otehr way round could be preparation of a rendered\ntemplate, but this sounds even more unnatural.\n\nIt would be nice to have a JavaScript-preprocessor and a relative Grunt task\nwhich can be used for creating the prototypes. Then, with transforming to PHP\nyou can use the same templates in the backend.\n\n## Concept\n\nI had a lot of ideas how to extend HTML with inheritance, includes and loops.\nBut finally I cut them off. It would be too complex to support and then provide\nthe portability. Besides, there is a lot of other template engines; I would\nrather enter into alliance with them than to compete. Finally I got not a\ntemplate engine but a preprocessor (or postprocessor) to the current one.\n\nThe scenario is the following. First, create BEML markup using your template\nengine. Then, past it not to the client but to the post-processor which turns\nBEM syntax into HTML. Funally the HTML goes to the client.\n\nOr, there is a faster way for the braves. You can change your template with\npre-processor which turns BEM attributes into HTML, cache it and use this\nchached copy with your dear template engine. Indeed, the pre-processor does not\ntouch the template engine code.\n\n## Syntax\n\nThis is very simple, you just use 4 more attributes like `block`, `elem`, `mod`\nand `mix`. I suppose it is clear what each of them is responsible for. For the\ncomplex values you can use light JSON dialect with no quotation marks and\noptional curly braces. Finally the tool turns this code:\n\n```html\n<div block=\"b-animals\">\n  <div elem=\"cat\" mod=\"size:big, color:red\"></div>\n</div>\n```\n\ninto the following HTML.\n\n```html\n<div class=\"b-animals\">\n  <div\n    class=\"b-animals__cat\n              b-animals__cat_size_big\n              b-animals__cat_color_red\n              \"\n  ></div>\n</div>\n```\n\nMuch readable.\n\nFull information about the syntax you can learn from the [README on GitHub](https://github.com/zenwalker/node-beml).\n\n## Try now\n\n```bash\nnpm install beml\n```\n\n```js\nvar beml = require(\"beml\");\nvar template = '<div block=\"b-block\" mod=\"size:big\"></div>';\n\nbeml.process(template, function (err, html) {\n  console.log(html);\n});\n```\n\n## Author\n\nThis article is a translaton.\nThe original article by Maxim Shkalin was [posted in his\nblog](http://zenwalker.ru/blog/2014/1/html-preprocessor-for-bem.html). Follow him in the social networks:\n<a class=\"link social-ico__ico social-ico__ico_in-text social-ico__ico_type_twitter\"\nhref=\"https://twitter.com/zenwalker2/\" target=\"_blank\"></a>\n<a class=\"link social-ico__ico social-ico__ico_in-text social-ico__ico_type_github\"\nhref=\"https://github.com/zenwalker/\" target=\"_blank\"></a>\n","fields":{"slug":"en/posts/beml-html-preprocessor/","disqusIdentifier":"en-issues-beml-html-preprocessor","readingTime":{"minutes":2.91}},"frontmatter":{"title":"BEML - an HTML preprocessor for BEM","subTitle":null,"date":"09 April 2014","v2":null,"old":true,"tumblr":null,"tags":null,"meta":null,"canonical":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"en/posts/beml-html-preprocessor/","prev":{"id":"57e8c1a5-9efe-5134-aac6-3eed6cbde5e1","fields":{"slug":"en/posts/borschik-static-assets/","disqusIdentifier":"en-issues-borschik-static-assets","level":1,"fileRelativePath":"borschik-static-assets/index_en.md","lang":"en","readingTime":{"minutes":2.565}},"frontmatter":{"title":"Borschik helps with remote static assets","subTitle":null,"link":null,"v2":null,"old":true,"date":"2014-03-10T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/borschik-static-assets/index_en.md"}},"next":{"id":"4b0ae0f3-75ad-527d-b30d-965404d4fd54","fields":{"slug":"en/posts/switching-to-bem-core-2/","disqusIdentifier":"en-issues-switching-to-bem-core-2","level":1,"fileRelativePath":"switching-to-bem-core-2/index_en.md","lang":"en","readingTime":{"minutes":1.285}},"frontmatter":{"title":"Switching to bem-core#v2","subTitle":null,"link":null,"v2":null,"old":true,"date":"2014-04-16T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/switching-to-bem-core-2/index_en.md"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/beml-html-preprocessor/index_en.md","frontmatter":{"title":"BEML - an HTML preprocessor for BEM","categories":"en issues","old":true,"date":"2014-04-09T00:00:00.000Z","layout":"post"}}},"staticQueryHashes":[],"slicesMap":{}}