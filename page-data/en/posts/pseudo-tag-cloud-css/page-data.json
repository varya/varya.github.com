{"componentChunkName":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-pseudo-tag-cloud-css-index-en-md","path":"/en/posts/pseudo-tag-cloud-css/","result":{"data":{"mdx":{"id":"202b6ceb-9c1a-568e-bec5-5264e53f0bdf","body":"\nimport PureHtml from '@components/PureHtml'\n\n<div data-excerpt>\n\nLast week I faced a need to make a fake tag cloud, where the words need to be of different size. This was needed for\na presentation slide, and as my slides are always in HTML/CSS, must be implemented with these technologies. It is always\npossible to inject some JavaScript and code anything. But what about pure CSS, do we get random sizes there?\n\n</div>\n\n<div class=\"testings\" markdown=\"1\">\n\n<ul class=\"cloud\">\n<li>performance testing</li>\n<li>stress testing</li>\n<li>conformance testing</li>\n<li>acceptane testing</li>\n<li>smoke testing</li>\n<li>regression testing</li>\n<li>white box testing</li>\n<li>functional testing</li>\n<li>system testing</li>\n<li>black box testing</li>\n<li>load testing</li>\n<li>compatibility testing</li>\n<li>unit testing</li>\n</ul>\n\n</div>\n\n<PureHtml html={`<style> .testings { text-align: center; width: 400px; } .testings .cloud { display: inline; list-style-type: none; width: 400px; } .testings .cloud li { list-style: none; display: inline; } .testings .cloud li:nth-of-type(3n + 1) { font-size: 1.25em; } .testings .cloud li:nth-of-type(4n+3) { font-size: 1.5em; } .testings .cloud li:nth-of-type(5n - 3) { font-size: 1em; } </style>`}/>\n\nThe tag cloud you see above is what I get. You may notice it's not real random; after refreshing you will always get the\nsame result. But still looks like a tag cloud of different sizes and works perfectly as an example.\n\nThis is a list, it's easy to generate from markdown:\n\n```html\n<ul class=\"cloud\">\n  <li>performance testing</li>\n  <li>stress testing</li>\n  <li>conformance testing</li>\n  <li>acceptane testing</li>\n  <li>smoke testing</li>\n  ...\n</ul>\n```\n\nThen, flattened as usual:\n\n```css\n.cloud {\n  display: inline;\n  list-style-type: none;\n  width: 400px;\n}\n.cloud li {\n  list-style: none;\n  display: inline;\n}\n```\n\nAnd then different sizes are made with a few `nth-of-type` combined in different variants:\n\n```css\n.cloud li:nth-of-type(3n + 1) {\n  font-size: 1.25em;\n}\n.cloud li:nth-of-type(4n + 3) {\n  font-size: 1.5em;\n}\n.cloud li:nth-of-type(5n - 3) {\n  font-size: 1em;\n}\n```\n\nI tuned the `nth-of-type` values so that it would look nicely. Depending on the length of the words used, you may need\nto play arownd with the values and maybe use more than 3 sizes.\n","fields":{"slug":"en/posts/pseudo-tag-cloud-css/","disqusIdentifier":"posts-pseudo-tag-cloud-css-index-en","readingTime":{"minutes":1.63}},"frontmatter":{"title":"Tag cloud of random sizes in pure CSS","subTitle":null,"date":"02 November 2015","v2":true,"old":null,"tumblr":null,"tags":null,"meta":{"desc":"Tag cloud of different with random sizes of the words with pure CSS.\n"},"canonical":null,"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/56dd12d33db3da0cf256e530f31c2600/36f12/thumb.png","srcSet":"/static/56dd12d33db3da0cf256e530f31c2600/36f12/thumb.png 856w","sizes":"856px"},"sources":[{"srcSet":"/static/56dd12d33db3da0cf256e530f31c2600/558ab/thumb.webp 856w","type":"image/webp","sizes":"856px"}]},"width":856,"height":440}}}}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"en/posts/pseudo-tag-cloud-css/","prev":{"id":"5f7913c2-e6aa-58b7-a13f-62c7bd5b27f3","fields":{"slug":"en/posts/on-the-unicorn-law/","disqusIdentifier":"posts-on-the-unicorn-law-index-en","level":1,"fileRelativePath":"on-the-unicorn-law/index_en.md","lang":"en","readingTime":{"minutes":5.615}},"frontmatter":{"title":"An answer to the question which should not have been asked","subTitle":null,"link":null,"v2":true,"old":null,"date":"2015-09-07T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/on-the-unicorn-law/index_en.md"}},"next":{"id":"377702af-2ec6-57f3-b89f-2cafe1b10550","fields":{"slug":"en/posts/dealing-atomically-with-icon-fonts/","disqusIdentifier":"posts-dealing-atomically-with-icon-fonts-index-en","level":1,"fileRelativePath":"dealing-atomically-with-icon-fonts/index_en.md","lang":"en","readingTime":{"minutes":5.385}},"frontmatter":{"title":"Dealing atomically with icon fonts","subTitle":null,"link":null,"v2":true,"old":null,"date":"2015-11-10T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/dealing-atomically-with-icon-fonts/index_en.md"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/pseudo-tag-cloud-css/index_en.md","frontmatter":{"title":"Tag cloud of random sizes in pure CSS","date":"2015-11-02T00:00:00.000Z","v2":true,"cover":"thumb.png","layout":"post","meta":{"desc":"Tag cloud of different with random sizes of the words with pure CSS.\n"}}}},"staticQueryHashes":[],"slicesMap":{}}