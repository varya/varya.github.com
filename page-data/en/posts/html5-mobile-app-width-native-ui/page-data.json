{"componentChunkName":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-html-5-mobile-app-width-native-ui-index-en-md","path":"/en/posts/html5-mobile-app-width-native-ui/","result":{"data":{"mdx":{"id":"f681afa9-8369-56dd-aa4a-4aa1abfdccf6","body":"\n<div data-excerpt>\n\nRecently I attended [Front Trends 2014](http://2014.front-trends.com/) in Warsaw.\nThis is an awesome conference which you should (no, definitely have to!) attend\nin 2015. Besides incredible main programm Front Trends provides a set of Lighting Talks.\nThis year I was a part of it presenting [Steroids](http://www.appgyver.com/steroids),\na framework and a toolkit for developing HTML5 mobile apps. If you did not have\na chance to hear it, this offline text presentation is for you.\n\n</div>\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#Cover\">\n  </iframe>\n</div>\n\nBeing an absolute newbie in developing mobile apps I decided to showcase\nSteroids because it enables me to create pretty native-looking application\nand smoothly go through the developing and releasing flow in a few minutes.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#summary\">\n  </iframe>\n</div>\n\nThe Steroids toolkit is a CLI; it brings Steroids JavaScript framewrok into\nyour project and takes care of building an app, developing flow, debugging\nand releasing. It is based on NodeJs, so you have to have it installed.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#3\">\n  </iframe>\n</div>\n\nThe required version for now is `0.10.25`. Follow the [Installation and Setup\nGuide](http://academy.appgyver.com/categories/1/contents/1).\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#4\">\n  </iframe>\n</div>\n\nYour very first start would be creating a project using `steroids create`\ncommand. Then, typing `steroids connect --watch` in the gotten project\nfolder launches steroids process. The `--watch` flag as you can guess tells\nSteroids to watch over the file changes, rebuild the app and push the results\nto the connected devices.\n\nYou can connect a physical smartphone to the project. After running\n`steroids connect` you get a web page with a QR code opened in your browser.\nUse `AppGyver Scanner` to read this QR code, it will bring the application\ninto your phone and keep it connected.\n\n<div Style=\"text-align:center;\">\n<a href=\"https://itunes.apple.com/us/app/appgyver-scanner/id575076515?mt=8\"\ntarget=\"_blank\"><img alt=\"Appstore\" class=\"appstore_icon\"\nsrc=\"https://share.appgyver.com/assets/appstore-df950585b54bd081a7826913fc715cd4.png\"/></a>\n<a href=\"https://play.google.com/store/apps/details?id=com.appgyver.android&amp;feature=nav_result#?t=W251bGwsMSwxLDMsImNvbS5hcHBneXZlci5hbmRyb2lkIl0.\"\ntarget=\"_blank\"><img alt=\"Googleplay\" class=\"appstore_icon\"\nsrc=\"https://share.appgyver.com/assets/googleplay-2cef882d62e402fbdbfe8cdac5794069.png\"/></a>\n</div>\n\nAnother way to watch the app is to bring it into a desktop simulator.\nTo do this, type `simulator` in the terminal wich launched\n`steroids connect`.\n\nYou can change the application source files. E.g. edit a text\nin `www/index.html` and make sure that the app in the connected device\nor in the simulator has been changed.\n\nTo provide more powerful changes you can learn from the examples\nand tutorials. Run `steroids generate` command and get the relevant\ncode.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#5\">\n  </iframe>\n</div>\n\nYou can learn from this code examples, from [tutorials](http://academy.appgyver.com/)\nand [API Docs](http://docs.appgyver.com/en/stable/index.html).\nBelow I demonstrated some of the features which enable\nto use _native UI_.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#examples-list\">\n  </iframe>\n</div>\n\nLet us start with showing the native tabs.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#7\">\n  </iframe>\n</div>\n\nIn the `config/application.coffee` file you can find a commented\nexample of defining a list of tabs with their icons and\nlocations (URLs) they lead to.\n\nIn my application I created 3 tabs. They are for\n\n- index.html\n- notificationExample.html\n- knowledge.html\n\n```coffee\nsteroids.config.tabBar.enabled = true\nsteroids.config.tabBar.tabs = [\n  {\n    title: \"Index\"\n    icon: \"icons/pill@2x.png\"\n    location: \"http://localhost/index.html\"\n  },\n  {\n    title: \"Notifications\"\n    icon: \"icons/bell.png\"\n    location: \"http://localhost/notificationExample.html\"\n  },\n  {\n    title: \"Knowledge base\"\n    icon: \"icons/coding.png\"\n    location: \"http://localhost/knowledge.html\"\n  }\n]\n```\n\nPlace the pages into `www` directory and keep them empty yet.\nDo not forget the icons. You can borrow the whole [icon\nfolder](https://github.com/varya/steroids-fronttrends2014/tree/master/www/icons).\n\nAfter making the change wait for rebuild and check.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9088/14441195.32/0_84262_ae854cb8_orig.png\" width=\"340\" height=\"89\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nNext, we can play with notifications.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#8\">\n  </iframe>\n</div>\n\nPlace these buttons inside the `<body>` container of the\n`www/notificationExample.html` file.\n\n```html\n<button class=\"button button-block\" ontouchend=\"showAlert()\">\n  Show alert dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"showConfirm()\">\n  Show confirm dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"showPrompt()\">\n  Show prompt dialogue\n</button>\n<button class=\"button button-block\" ontouchend=\"vibrate()\">\n  Vibrate the device\n</button>\n```\n\nAs you can see, they run different JavaScript functions on\ntouch. To finish the page you need to define these functions\nin the `<head>` or linked `*.js` file. Each function demonstrates\na kind of notification which are:\n\n- `navigator.notification.alert`\n- `navigator.notification.confirm`\n- `navigator.notification.prompt`\n- `navigator.notification.vibrate`\n\nBorrow the JavaScript code from [my repo](https://github.com/varya/steroids-fronttrends2014/blob/master/www/notificationExample.html#L15).\n\nNow you can navigate to this page using the tabs and try\neach type of notification with tapping.\n\nAnother native element could be a button in the application navigation\nbar.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#9\">\n  </iframe>\n</div>\n\nThe navigation bar can be modified with JavaScript on Steroids.\nIf you want it to be the same across all the application pages,\nprovide this JavaScript in the `www/javascripts/application.js` file\nwhich is linked to all the `*.html` files.\n\n```js\nvar loginButton = new steroids.buttons.NavigationBarButton();\nloginButton.title = \"the Button\";\n\nloginButton.onTap = function () {\n  navigator.notification.alert(\n    \"You tapped the button!\",\n    function () {},\n    \"the Alert\",\n    \"I did!\"\n  );\n};\n\nsteroids.view.navigationBar.update({\n  buttons: {\n    right: [loginButton],\n  },\n});\n```\n\nThis will bring the button to the right side of the\nnavigation bar. Tapping on it you can see a notification; one\nof those you studied recently.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9115/14441195.32/0_84264_7f27d435_L.png\" width=\"282\" height=\"500\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nThe last of native UI examples in this app is showing\nmodal views.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#10\">\n  </iframe>\n</div>\n\nAdd this button into `www/index.html`:\n\n```html\n<a class=\"button button-block\" ontouchend=\"showModal()\">Open modal</a>\n```\n\nAnd code `showModal` method to open a view as a modal.\n\n```js\nfunction showModal() {\n  var webView = new steroids.views.WebView(\"/views/modalExample/show.html\");\n  steroids.modal.show(webView);\n}\n```\n\nThe related view is a piece of html, which you should place into\n`app/views/modalExample/show.html`. BTW, it has to have an interface\nelement closing the view. To make the process faster, pick up the\n[code from the application repo](https://github.com/varya/steroids-fronttrends2014/blob/master/app/views/modalExample/show.html).\n\nWith this and [other UI features](http://docs.appgyver.com/en/stable/steroids_Steroids%20Native%20UI_index.md.html#Steroids%C2%A0Native%C2%A0UI)\nyou can build a mobile interface which looks absolutely native for a\ndevice where you application runs.\n\nOnce finished coding (or even in process) you may need to show the\napplication to your friend, client or Mom.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#sharing\">\n  </iframe>\n</div>\n\nYou can use the QR code from the beginning of our session which can\nbring your application to any any device directly from your computer.\nHowever this only will work if them both are connected to the same\nnetwork.\n\nIf you want to share with someone remotely, deploy your app into the cloud.\nThe `steroids deploy` command serves for it. As a result you get\na page (also with a QR code) which can be scanned with AppGyver Scaner on\na phone and thus your pal get the same app from the cloud.\n\nAll your applications in the cloud can be shared, tuned and built with\nweb interface at [cloud.appgyver.com](https://cloud.appgyver.com/applications).\n\nFrom there you also push the app into AppStore and GooglePlay.\n\n<div Style=\"text-align:center;\">\n<img src=\"http://img-fotki.yandex.ru/get/9062/14441195.32/0_84265_d03d686e_orig.png\" width=\"500\" height=\"327\" border=\"0\" title=\"\" alt=\"\"/>\n</div>\n\nThis is easy. As easy that a newbie can develop an app in a few minutes\nand show you the how-to.\n\n<div class=\"slide\">\n  <iframe class=\"slide__frame\" scrolling=\"no\"\n    src=\"http://varya.me/start-with-steroids/?full#links\">\n  </iframe>\n</div>\n\nYou can learn more about Steroids and Cordova (Steroids is based on PhoneGap)\nat the [AppGyver Academy](http://academy.appgyver.com/) where you find:\n\n- detailed tutorials,\n- documentation,\n- big community of devs.\n\nAnd, of course, you can read [this blog](/en/posts/). I promise to share my next findings\nregarding Steroids soon :-)\n","fields":{"slug":"en/posts/html5-mobile-app-width-native-ui/","disqusIdentifier":"posts-html5-mobile-app-width-native-ui-index-en","readingTime":{"minutes":5.865}},"frontmatter":{"title":"HTML5 mobile apps with native UI on Steroids","subTitle":null,"date":"26 May 2014","v2":true,"old":null,"tumblr":null,"tags":null,"meta":null,"canonical":null,"cover":null}},"site":{"siteMetadata":{"siteUrl":"https://varya.me"}}},"pageContext":{"slug":"en/posts/html5-mobile-app-width-native-ui/","prev":{"id":"4b0ae0f3-75ad-527d-b30d-965404d4fd54","fields":{"slug":"en/posts/switching-to-bem-core-2/","disqusIdentifier":"en-issues-switching-to-bem-core-2","level":1,"fileRelativePath":"switching-to-bem-core-2/index_en.md","lang":"en","readingTime":{"minutes":1.285}},"frontmatter":{"title":"Switching to bem-core#v2","subTitle":null,"link":null,"v2":null,"old":true,"date":"2014-04-16T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/switching-to-bem-core-2/index_en.md"}},"next":{"id":"1062dc1e-8d13-511e-97d5-132fc46a17d5","fields":{"slug":"en/posts/docpad-with-bem-taste/","disqusIdentifier":"posts-docpad-with-bem-taste-index-en","level":1,"fileRelativePath":"docpad-with-bem-taste/index_en.md","lang":"en","readingTime":{"minutes":4.795}},"frontmatter":{"title":"Docpad with the taste of BEM","subTitle":null,"link":null,"v2":true,"old":null,"date":"2014-06-04T00:00:00.000Z","layout":"post","tags":null},"internal":{"contentFilePath":"/home/runner/work/varya.github.com/varya.github.com/content/posts/docpad-with-bem-taste/index_en.md"}},"fileSourceUrl":"https://github.com/varya/varya.github.com/edit/develop/content/posts/html5-mobile-app-width-native-ui/index_en.md","frontmatter":{"title":"HTML5 mobile apps with native UI on Steroids","date":"2014-05-26T00:00:00.000Z","v2":true,"layout":"post"}}},"staticQueryHashes":[],"slicesMap":{}}