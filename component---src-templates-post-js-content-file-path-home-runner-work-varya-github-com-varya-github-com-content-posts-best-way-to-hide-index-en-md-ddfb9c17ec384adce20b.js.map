{"version":3,"file":"component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-best-way-to-hide-index-en-md-ddfb9c17ec384adce20b.js","mappings":"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","sources":["webpack://varya.me/./content/posts/best-way-to-hide/index_en.md","webpack://varya.me/./src/templates/Post.js","webpack://varya.me/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    span: \"span\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"There is a well-known front-end pattern which is to have hidden elements in DOM\\nand make them visible when necessary. As with any good pattern, it can be\\ncompromised by wrong implementation.\"), \"\\n\", React.createElement(\"excerpt\"), \"\\n\", React.createElement(_components.p, null, \"Most times, \", React.createElement(_components.strong, null, \"hidden\"), \" means that the DOM element gets a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display: none</code>\"\n    }\n  }), \" property.\\nThis approach has become even more widespread thanks to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.hide()</code>\"\n    }\n  }), \" and \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.show()</code>\"\n    }\n  }), \" jQuery helpers.\"), \"\\n\", React.createElement(_components.p, null, \"Whenever you need to hide a visible block you use the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.hide()</code>\"\n    }\n  }), \" helper which in\\ncharge of assigning an inline \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display: none</code>\"\n    }\n  }), \" style property, making the block\\ninvisible. When it has to become visible again, the \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.show()</code>\"\n    }\n  }), \" helper changes the\\ninline CSS \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display</code>\"\n    }\n  }), \" property.\"), \"\\n\", React.createElement(_components.p, null, \"I believe this is a very nice example of wrong implementation.\"), \"\\n\", React.createElement(_components.p, null, \"The solution unifies all the elements around the world and assumes all of them\\ncan be hidden in the same way. But this assumption is far from reality.\"), \"\\n\", React.createElement(_components.p, null, \"Let us say we have an element in a visible state. Guess what will happen when we\\nuse \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.hide()</code>\"\n    }\n  }), \" and \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.show()</code>\"\n    }\n  }), \"?\\nYes, an inline style with a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display</code>\"\n    }\n  }), \" property will be added.\\nIn other words, the element will not return back to its original visible state.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">..&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\" style=\\\"display: none;\\\">..&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">show</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\" style=\\\"display: block;\\\">..&lt;/span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"jQuery is clever enough to detect inline elements. By applying \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.hide()</code>\"\n    }\n  }), \" and\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.show()</code>\"\n    }\n  }), \", you get something like this:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">...&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">hide</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\" style=\\\"display: none;\\\">...&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">show</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\" style=\\\"display: inline;\\\">...&lt;/span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Again, the block did not \", React.createElement(_components.strong, null, \"return\"), \" to its original state after being shown. For\\nsure, it became visible, but this state is not equivalent to the original one.\\nAny new CSS class appended to the element with an intention to change its\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display</code>\"\n    }\n  }), \" property will not work as the inline style rule prevails.\"), \"\\n\", React.createElement(_components.p, null, \"The other problem is that setting \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display</code>\"\n    }\n  }), \" property to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">none</code>\"\n    }\n  }), \" doesn't always\\nwork for making an element invisible. Maybe for some reason it has to be hidden\\nfrom a user with \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">left: -9999px</code>\"\n    }\n  }), \"?\"), \"\\n\", React.createElement(_components.p, null, \"It's only the interface block implementation that should know about all the\\nblock states, including the hidden one.\"), \"\\n\", React.createElement(_components.p, null, \"Modifiers (no matter if you prefer \", React.createElement(_components.a, {\n    href: \"http://smacss.com/\"\n  }, \"SMACCS\"), \",\\n\", React.createElement(_components.a, {\n    href: \"http://oocss.org/\"\n  }, \"OOCSS\"), \" or \", React.createElement(_components.a, {\n    href: \"http://bem.info/\"\n  }, \"BEM\"), \") are designed to express\\nstates of interface components. The same goes for the hidden state.\"), \"\\n\", React.createElement(_components.p, null, \"Every block you would like to hide and show should be equipped with a proper\\nmodifier:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\"><pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token selector\\\">.my-block_hidden</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">display</span><span class=\\\"token punctuation\\\">:</span> none<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Then, by applying this modifier and removing it from a block you can be sure it\\ntransitions into one of its predefined states:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">...&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addClass</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"my-block_hidden\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block my-block_hidden\\\">...&lt;/span></span>\\n\\n<span class=\\\"token function\\\">$</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeClass</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"my-block_hidden\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">...&lt;/span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"This enables you to provide any type of hiding, not necessarily \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">display: none</code>\"\n    }\n  }), \",\\nand ensures the block returns to its original visible state when shown again.\"), \"\\n\", React.createElement(_components.p, null, \"If you prefer not to mess with all those \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.addClass()</code>\"\n    }\n  }), \" and \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.removeClass()</code>\"\n    }\n  }), \"\\nhelpers, you can teach your JavaScript to work with modifiers (e.g. \", React.createElement(_components.a, {\n    href: \"https://github.com/varya/bem-js-tutorial/blob/master/02-Modifiers.md\"\n  }, \"as\\nBEM does\\nit\"), \") which\\nwill make your code even better:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">block</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">...&lt;/span></span>\\n\\n$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">block</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setMod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hidden\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block my-block_hidden\\\">...&lt;/span></span>\\n\\n$<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">block</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"my-block\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">delMod</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hidden\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// &lt;span class=\\\"my-block\\\">...&lt;/span></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"That's all. From now on you are not allowed to use \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.hide()</code>\"\n    }\n  }), \" and \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.show()</code>\"\n    }\n  }), \".\\nEven for prototyping :-)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/varya.github.com/varya.github.com/content/posts/best-way-to-hide/index_en.md\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {graphql} from \"gatsby\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Box, Button, Text} from \"grommet\";\nimport {Comments, DsAspects, GithubEdit, Heading, Hero, Image, ImageBlock, Layout, Link, Paragraph, PatternJourney, PostHeader, PrevNextNav, ProjectRoles, Workshop, PureHtml, Section, Seo, Tag, Widget, WidgetContainer} from \"@components\";\nimport {toKebabCase} from \"../common/utils\";\nconst globalMdxComponents = {\n  Box,\n  Button,\n  Text,\n  Heading,\n  Paragraph,\n  PatternJourney,\n  PureHtml,\n  Section,\n  Hero,\n  Widget,\n  PatternJourney,\n  WidgetContainer,\n  Workshop,\n  ProjectRoles,\n  DsAspects,\n  Link,\n  Image,\n  ImageBlock\n};\nconst _Heading = level => {\n  const component = ({children}) => React.createElement(Heading, {\n    level: level\n  }, children);\n  component.propTypes = {\n    children: PropTypes.node\n  };\n  return component;\n};\nconst _Paragraph = () => {\n  const component = ({children}) => React.createElement(Paragraph, {\n    standout: true\n  }, children);\n  component.propTypes = {\n    children: PropTypes.node\n  };\n  return component;\n};\nconst _div = ({\"data-excerpt\": dataExcerpt, children, ...props}) => dataExcerpt ? React.createElement(Paragraph, {\n  as: \"div\",\n  lead: true\n}, children) : React.createElement(\"div\", props, children);\n_div.propTypes = {\n  \"data-excerpt\": PropTypes.string,\n  children: PropTypes.node\n};\nconst postComponents = {\n  h1: _Heading(1),\n  h2: _Heading(2),\n  h3: _Heading(3),\n  h4: _Heading(4),\n  h5: _Heading(5),\n  h6: _Heading(6),\n  p: _Paragraph(),\n  a: Link,\n  div: _div\n};\npostComponents.h1.propTypes = {\n  children: PropTypes.node\n};\nconst Post = ({data: {mdx, site: {siteMetadata: {siteUrl}}}, children, pageContext: {next, prev, fileSourceUrl}}) => {\n  const {readingTime, slug, disqusIdentifier} = mdx.fields;\n  const {date, title, subTitle, cover, tumblr} = mdx.frontmatter;\n  const tags = mdx.frontmatter.tags && mdx.frontmatter.tags.split(\",\");\n  const showBlogMeta = slug.startsWith(\"blog/\");\n  if (!mdx) {\n    return null;\n  }\n  return React.createElement(Layout, null, React.createElement(PostHeader, {\n    imageUrl: cover && cover.childImageSharp.gatsbyImageData.images.fallback.src,\n    tags: tags,\n    date: date,\n    readingTime: showBlogMeta && parseInt(readingTime.minutes) > 0 ? `${Math.round(readingTime.minutes).toFixed(1)} min read` : null,\n    title: title,\n    subTitle: subTitle\n  }), React.createElement(Seo, {\n    data: mdx\n  }), React.createElement(Box, {\n    flex: \"grow\",\n    width: \"xlarge\",\n    margin: {\n      horizontal: \"auto\"\n    },\n    pad: \"medium\",\n    direction: \"column\"\n  }, React.createElement(MDXProvider, {\n    components: {\n      ...postComponents,\n      ...globalMdxComponents\n    }\n  }, children), React.createElement(Box, {\n    direction: \"row\",\n    fill: \"horizontal\",\n    justify: \"center\",\n    margin: {\n      bottom: \"auto\"\n    },\n    pad: {\n      vertical: \"medium\"\n    }\n  }, tags && tags.length > 0 && tags.map(tag => React.createElement(Tag, {\n    key: tag,\n    name: tag.trim(),\n    slug: toKebabCase(tag),\n    margin: \"xsmall\"\n  }))), showBlogMeta && React.createElement(React.Fragment, null, React.createElement(PrevNextNav, {\n    flex: false,\n    prevSlug: prev && `/${prev.fields.slug}`,\n    nextSlug: next && `/${next.fields.slug}`,\n    prevTitle: prev && prev.frontmatter.title,\n    nextTitle: next && next.frontmatter.title,\n    pad: {\n      vertical: \"medium\"\n    }\n  }), React.createElement(GithubEdit, {\n    link: fileSourceUrl\n  }), React.createElement(Comments, {\n    slug,\n    title,\n    disqusIdentifier,\n    tumblr,\n    siteUrl\n  }))));\n};\nPost.propTypes = {\n  imageUrl: PropTypes.string,\n  data: PropTypes.object,\n  pageContext: PropTypes.shape({\n    prev: PropTypes.object,\n    next: PropTypes.object,\n    fileSourceUrl: PropTypes.string\n  })\n};\nPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Post, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        slug\n        disqusIdentifier\n        readingTime {\n          minutes\n        }\n      }\n      frontmatter {\n        title\n        subTitle\n        date(formatString: \"DD MMMM YYYY\")\n        v2\n        old\n        tumblr\n        tags\n        meta {\n          desc\n        }\n        canonical\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: FIXED)\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","span","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","globalMdxComponents","Box","Button","Text","Heading","Paragraph","PatternJourney","PureHtml","Section","Hero","Widget","WidgetContainer","Workshop","ProjectRoles","DsAspects","Link","Image","ImageBlock","_Heading","level","_ref","children","postComponents","h1","h2","h3","h4","h5","h6","_ref2","standout","div","_ref3","dataExcerpt","as","lead","propTypes","PropTypes","Post","_ref4","data","mdx","site","siteMetadata","siteUrl","pageContext","next","prev","fileSourceUrl","readingTime","slug","disqusIdentifier","fields","date","title","subTitle","cover","tumblr","frontmatter","tags","split","showBlogMeta","startsWith","Layout","PostHeader","imageUrl","childImageSharp","gatsbyImageData","images","fallback","src","parseInt","minutes","Math","round","toFixed","Seo","flex","width","margin","horizontal","pad","direction","MDXProvider","fill","justify","bottom","vertical","length","map","tag","Tag","key","name","trim","toKebabCase","PrevNextNav","prevSlug","nextSlug","prevTitle","nextTitle","GithubEdit","link","Comments","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}