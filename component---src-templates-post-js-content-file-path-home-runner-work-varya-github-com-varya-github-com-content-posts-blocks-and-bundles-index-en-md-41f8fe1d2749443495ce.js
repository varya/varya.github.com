"use strict";(self.webpackChunkvarya_me=self.webpackChunkvarya_me||[]).push([[9320],{4608:function(e,t,n){n.r(t),n.d(t,{default:function(){return E}});var a=n(4552),o=n(1504);function s(e){const t=Object.assign({p:"p",a:"a",span:"span",img:"img",em:"em"},(0,a.MN)(),e.components);return o.createElement(o.Fragment,null,o.createElement(t.p,null,"A couple of days ago I was asked about some basic things of using ",o.createElement(t.a,{href:"https://github.com/bem/project-stub/tree/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c"},"BEM project\nstub"),"\nfrom someone who is enjoying the full BEM stack (BEM-CSS, i-bem.js and BEMHTML\ntemplates) for their projects. Answering the questions I promised to turn the\ninformation into text as we always skip many important things mistakenly\nconsidering them being primitive."),"\n",o.createElement("excerpt"),"\n",o.createElement(t.p,null,"The quesion was about ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.bem/make.js</code>'}})," configuration file which is needed if you\nuse ",o.createElement(t.a,{href:"http://bem.info/tools/bem/bem-tools/"},"bem tools")," to build your pages. The\n",o.createElement(t.a,{href:"https://github.com/bem/project-stub/blob/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c/.bem/make.js#L12"},"12th and 13th\nlines"),"\ndescribe regular expressions to match ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">blocks</code>'}})," and ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">bundles</code>'}}),". And the meaning of\nthese terms turned out to be unclear."),"\n",o.createElement(t.p,null,"First of all, the expressions are to detect folders on the project file system.\nThose which end with ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.blocks</code>'}})," store blocks, and those which end with ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.bundles</code>'}}),"\nstore bundles. The ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.blocks</code>'}})," and ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.bundles</code>'}})," folders of the project\nstub demonstrate this."),"\n",o.createElement(t.p,null,"The purpose of ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.blocks</code>'}})," folder should be clear. As BEM is a modular\ndevelopment pattern there has to be a place to store modules, the so-called\n",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">blocks</code>'}}),". Each block has its own directory to keep all the files needed for this\nparticular interface module. E.g. ",o.createElement(t.a,{href:"https://github.com/varya/online-shop-dummy/tree/master/desktop.blocks"},"one project block\nset"),"."),"\n",o.createElement(t.p,null,"The ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.bundles</code>'}})," folder needs some comments. It stores pages, which are the\nresult of blocks applied. Every page has its own folder and inside you can find\ndifferent files needed for a page to function. Examine the ",o.createElement(t.a,{href:"https://github.com/varya/online-shop-dummy/tree/gh-pages/desktop.bundles"},"example\nproject"),"\nagain."),"\n",o.createElement(t.p,null,"The difference is that block files are coded by a developer, as bundle files are\nbuilt with the tools. Block files are our dear CSS, JavaScript and sometimes templates."),"\n",o.createElement("pre",null,o.createElement("code",null,"├── desktop.blocks/\n│   ├── goods/\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.bemhtml"},"goods.bemhtml"),"\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.css"},"goods.css"),"\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.deps.js"},"goods.deps.js"),"\n│   │   └── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/master/desktop.blocks/goods/goods.ie.css"},"goods.ie.css"))),"\n",o.createElement(t.p,null,"Real world analogy of a BEM block (and actually any module of any modular\npattern) can be a buiding brick."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/6730/14441195.30/0_7e0f8_33c1c86c_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"Bundle files are also what a browser can read: CSS, JavaScript, HTML. ",o.createElement(t.em,null,"None of\nthem was written by a person, they are built with BEM tools"),". Have a look\ninside to be sure that this is robot's code."),"\n",o.createElement("pre",null,o.createElement("code",null,"├── desktop.bundles/\n│   ├── index/\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/_index.css"},"_index.css"),"\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/_index.js"},"_index.js"),"\n│   │   ├── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.bemjson.js"},"index.bemjson.js"),"\n│   │   └── ",o.createElement("a",{href:"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.html"},"index.html"))),"\n",o.createElement(t.p,null,"Think about bem tools as about building crane to pick up the bricks and make a\nhouse with them."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/9058/14441195.30/0_7e0f3_ff76f66a_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"Besides _.js, _.css and *.html files there is the only one here written by a\ndeveloper. This is\n",o.createElement(t.a,{href:"https://github.com/varya/online-shop-dummy/blob/gh-pages/desktop.bundles/index/index.bemjson.js"},"index.bemjson.js"),",\nthe JSON decription of what are the blocks on a page and what it their nested\nstructure. Sounds logical, as only we human can know what we would like to see\non a page. Everything else is produced by the ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">bem tools</code>'}}),". Once given\ninformaiton about which blocks to use for a page, they pick them up from\n",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.blocks</code>'}})," set of blocks and do their job."),"\n",o.createElement(t.p,null,"Extending the building-a-house example I can say that ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">page.bemjson.js</code>'}})," file\nhere is a draft."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/6704/14441195.30/0_7e1ba_9dacd537_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"But why do ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">bem tools</code>'}})," need the regular expessions?"),"\n",o.createElement(t.p,null,"This is quite easy. The folders ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">bem tools</code>'}})," operate with are ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">levels</code>'}}),". It can\nhelp if you think about a level as about ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">a set</code>'}}),", a set of entities. There can be\na set of blocks wraped with ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.blocks</code>'}})," folder, and a set of result pages\nwraped with ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.bundles</code>'}})," folder. In the\n",o.createElement(t.a,{href:"https://github.com/bem/project-stub/tree/14e24fd17ba66a357a2f6fcdce045065b4eb5d6c/.bem/levels"},".bem/levels/"),"\ncofiguration folder there are some instructions from which bem tools understand\nwhat to do with those different types of levels."),"\n",o.createElement(t.p,null,"Dividing your project entities into blocks and bundles makes it possible to have\ndifferent sets of blocks and different bundles built with those sets. For\nexample, you can store blocks to a desktop and touch versions of your web site\ninto the same repository as well as the pages built with them."),"\n",o.createElement("pre",null,o.createElement("code",null,"├── desktop.blocks/\n├── desktop.bundles/\n├── touch.blocks/\n└── touch.bundles/")),"\n",o.createElement(t.p,null,"Comming back to the real world, not only bricks are the modules but lego blocks\nas well."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/6704/14441195.30/0_7e0f6_f69c7d44_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"They also are to build a house. A pretty different house though."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/9326/14441195.30/0_7e0f4_3d999550_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"Going futher you can detach code common for all the platforms and store it\nseparately."),"\n",o.createElement("pre",null,o.createElement("code",null,"├── common.blocks/\n├── desktop.blocks/\n├── desktop.bundles/\n├── touch.blocks/\n└── touch.bundles/")),"\n",o.createElement(t.p,null,"With that structure desktop version of a web site gets source code from both\n",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">common.blocks</code>'}})," and ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">desktop.blocks</code>'}})," levels as touch version gets it from\n",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">common.blocks</code>'}})," and ",o.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">touch.blocks</code>'}}),"."),"\n",o.createElement(t.img,{src:"http://img-fotki.yandex.ru/get/6725/14441195.30/0_7e0f5_3e107fd4_L.jpg",alt:""}),"\n",o.createElement(t.p,null,"And before I wrap up, I cannot stop being delighted by the idea of ",o.createElement(t.a,{href:"https://github.com/bem/project-stub/"},"BEM project\nstub"),". I use it a lot myself when starting\nprojects. The ",o.createElement(t.a,{href:"http://bem.info/articles/start-with-project-stub/"},"Full stack quick start\ntutorial")," which you may\nremember demostrates how exactly. So does a friend who asked me about the\nbasics. I never realized before that the project stub makes is possible to start\na BEM project with no knowledge above. :-)"),"\n",o.createElement(t.p,null,"Having this written I see that describing the BEM basics is pretty easy and not very\ntime-consuming to me being (I hope!) useful for the others. If so, please ask\nwhat you need to know."))}var l=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.MN)(),e.components);return t?o.createElement(t,e,o.createElement(s,e)):s(e)},r=n(3268),c=n.n(r),d=n(8164),i=n(5864),m=n(4388),u=n(7264),h=n(7768);const p={Box:d.k,Button:i.q,Text:m.a,Heading:u._m,Paragraph:u.gZ,PatternJourney:u.cR,PureHtml:u.Sc,Section:u.iG,Hero:u.Ax,Widget:u.MF,PatternJourney:u.cR,WidgetContainer:u.gV,Workshop:u.yw,ProjectRoles:u.Ij,DsAspects:u.gN,Link:u.cH,Image:u.WC,ImageBlock:u.uD},g=e=>t=>{let{children:n}=t;return o.createElement(u._m,{level:e},n)},b={h1:g(1),h2:g(2),h3:g(3),h4:g(4),h5:g(5),h6:g(6),p:e=>{let{children:t}=e;return o.createElement(u.gZ,{standout:!0},t)},a:u.cH,div:e=>{let{"data-excerpt":t,children:n,...a}=e;return t?o.createElement(u.gZ,{as:"div",lead:!0},n):o.createElement("div",a,n)}};b.h1.propTypes={children:c().node};const f=e=>{let{data:{mdx:t,site:{siteMetadata:{siteUrl:n}}},children:s,pageContext:{next:l,prev:r,fileSourceUrl:c}}=e;const{readingTime:i,slug:m,disqusIdentifier:g}=t.fields,{date:f,title:E,subTitle:y,cover:k,tumblr:_}=t.frontmatter,x=t.frontmatter.tags&&t.frontmatter.tags.split(","),w=m.startsWith("blog/");return t?o.createElement(u._W,null,o.createElement(u.my,{imageUrl:k&&k.childImageSharp.gatsbyImageData.images.fallback.src,tags:x,date:f,readingTime:w&&parseInt(i.minutes)>0?Math.round(i.minutes).toFixed(1)+" min read":null,title:E,subTitle:y}),o.createElement(u.yc,{data:t}),o.createElement(d.k,{flex:"grow",width:"xlarge",margin:{horizontal:"auto"},pad:"medium",direction:"column"},o.createElement(a.Iu,{components:{...b,...p}},s),o.createElement(d.k,{direction:"row",fill:"horizontal",justify:"center",margin:{bottom:"auto"},pad:{vertical:"medium"}},x&&x.length>0&&x.map((e=>o.createElement(u.ED,{key:e,name:e.trim(),slug:(0,h.MZ)(e),margin:"xsmall"})))),w&&o.createElement(o.Fragment,null,o.createElement(u.uU,{flex:!1,prevSlug:r&&"/"+r.fields.slug,nextSlug:l&&"/"+l.fields.slug,prevTitle:r&&r.frontmatter.title,nextTitle:l&&l.frontmatter.title,pad:{vertical:"medium"}}),o.createElement(u.Oc,{link:c}),o.createElement(u.QZ,{slug:m,title:E,disqusIdentifier:g,tumblr:_,siteUrl:n})))):null};function E(e){return o.createElement(f,e,o.createElement(l,e))}},4552:function(e,t,n){n.d(t,{Iu:function(){return r},MN:function(){return s}});var a=n(1504);const o=a.createContext({});function s(e){const t=a.useContext(o);return a.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const l={};function r({components:e,children:t,disableParentContext:n}){let r;return r=n?"function"==typeof e?e({}):e||l:s(e),a.createElement(o.Provider,{value:r},t)}}}]);
//# sourceMappingURL=component---src-templates-post-js-content-file-path-home-runner-work-varya-github-com-varya-github-com-content-posts-blocks-and-bundles-index-en-md-41f8fe1d2749443495ce.js.map